(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{1111:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=w(n(244)),r=w(n(248)),i=w(n(246)),o="/Users/levan/xizhi_teacher_front_v3.0/src/Pages/DetailStat/index.js",s=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();n(245),n(249),n(516);var l=w(n(1));n(1328);var u=w(n(1118)),c=w(n(1330)),d=w(n(1137)),m=w(n(1136)),f=w(n(1117)),h=w(n(101)),p=w(n(1145)),_=w(n(1127)),b=n(243),v=n(170),g=n(127),y=n(171);function w(e){return e&&e.__esModule?e:{default:e}}var N=i.default.Option,k=function(e){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var e=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));e.handleChange=function(t){var n=e.state,a=n.type,r=n.current_homework_id;if("homework"===a){if(r===t)return;e.setState({current_homework_id:t}),e.getHomeworkData(t),e.getHomeworkSubsectionData(t),e.getHomeworkStudentData(t),e.props.dispatch((0,y.setHomeworkId)(t))}},e.subsectionListOnChange=function(t){e.getData({page:t.current});var n=e.state,a=n.type,r=n.current_homework_id,i=n.squad_id;"homework"===a&&e.getHomeworkSubsectionData(r,{page:t.current}),"total"===a&&e.getSquadSubsectionData(i,{page:t.current})},e.studentListOnChange=function(t,n,a){var r=e.state,i=r.type,o=r.current_homework_id,s=r.squad_id,l={page:t.current},u=(0,b.isObjectEmpty)(a);u||"descend"!==a.order?u||"ascend"!==a.order||(l.ordering=a.field):l.ordering="-"+a.field,"homework"===i&&e.getHomeworkStudentData(o,l),"total"===i&&e.getSquadStudentData(s,l)},e.exportBtnClick=function(){var t=e.state.students;t&&t.data&&t.data.length>0?e.refs.studenttable.exportList():r.default.warning("暂无数据, 无法导出")};var n=h.default.location.pathname;return e.state={pathname:n,type:(0,b.getDetailType)(n),squad_id:(0,b.getSquadId)(n),homework_list:[],current_homework_id:"",subsection_list:null,students:null,homework_data:null},e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,l.default.Component),s(t,[{key:"componentDidMount",value:function(){var e=this,t=this.state,n=t.squad_id,a=t.type;"homework"===a&&(0,v.getSquadHomeworks)(n).then(function(t){if(!e.isUnmounted){var n=t.data;if(n.length>0){var a=e.props.current_homework_id||n[n.length-1].homework_id;e.getHomeworkData(a),e.getHomeworkSubsectionData(a),e.getHomeworkStudentData(a),e.setState({current_homework_id:a})}e.setState({homework_list:n})}}),"total"===a&&((0,v.getSquadTotalDetail)(n).then(function(t){if(!e.isUnmounted){e.setState({homework_data:t});var n=t.question_info;n?n.question&&e.props.dispatch((0,y.setSubectionPath)({book:n.question.book,chapter:n.question.chapter,section:n.question.section,subsections:n.question.subsections})):e.props.dispatch((0,y.setSubectionPath)(null))}}),this.getSquadSubsectionData(n),this.getSquadStudentData(n))}},{key:"componentWillUnmount",value:function(){this.isUnmounted=!0}},{key:"getSquadStudentData",value:function(e,t){var n=this;(0,v.getSquadStudent)(e,t).then(function(e){n.isUnmounted||n.setState({students:e})})}},{key:"getSquadSubsectionData",value:function(e,t){var n=this;(0,v.getSquadSubsection)(e,t).then(function(e){n.isUnmounted||n.setState({subsection_list:e})})}},{key:"getHomeworkData",value:function(e){var t=this;(0,v.getHomeworkDetail)(e).then(function(e){if(!t.isUnmounted){t.setState({homework_data:e});var n=e.question_info;n?n.question&&t.props.dispatch((0,y.setSubectionPath)({book:n.question.book,chapter:n.question.chapter,section:n.question.section,subsections:n.question.subsections})):t.props.dispatch((0,y.setSubectionPath)(null))}})}},{key:"getHomeworkSubsectionData",value:function(e,t){var n=this;(0,v.getHomeworkSubsections)(e,t).then(function(e){n.isUnmounted||n.setState({subsection_list:{data:e,page:1,page_num:1}})})}},{key:"getHomeworkStudentData",value:function(e,t){var n=this;(0,v.getHomeworkStudent)(e,t).then(function(e){n.isUnmounted||n.setState({students:e})})}},{key:"render",value:function(){var e=this.state,t=e.type,n=e.homework_list,r=e.current_homework_id,s=e.subsection_list,v=e.students,g=e.pathname,y=e.homework_data,w=e.squad_id,k=[];y&&(k=y.weak_topics.map(function(e){return e.name}));var x="homework"===t?y&&y.total_homework_num:y&&y.squad.student_num;return l.default.createElement("div",{className:"detailstat",__source:{fileName:o,lineNumber:222}},l.default.createElement(_.default,{__source:{fileName:o,lineNumber:223}}),"homework"===t?l.default.createElement("div",{className:"ds-select",__source:{fileName:o,lineNumber:226}},l.default.createElement(i.default,{value:r,showSearcha:!0,style:{width:384,background:"#fff",border:"0"},placeholder:"选择一个作业",onChange:this.handleChange,__source:{fileName:o,lineNumber:227}},n.map(function(e,t){return l.default.createElement(N,{value:e.homework_id,key:t,__source:{fileName:o,lineNumber:236}},e.name)}))):null,l.default.createElement("div",{className:"ds-topinfo",__source:{fileName:o,lineNumber:243}},l.default.createElement("span",{className:"dst-left box",__source:{fileName:o,lineNumber:244}},l.default.createElement("span",{className:"dstl-chart",__source:{fileName:o,lineNumber:245}},l.default.createElement(f.default,{data:{id:"sstl-left",type:"comp",r_rate:.28,value:y?0===y.total_homework_num?0:y.finished_num/y.total_homework_num:0},__source:{fileName:o,lineNumber:246}})),l.default.createElement("span",{className:"dstl-chart",__source:{fileName:o,lineNumber:258}},l.default.createElement(f.default,{data:{id:"sstl-right",type:"avg",r_rate:.28,value:y?0===y.question_num?0:y.correct_question_num/y.question_num:0},__source:{fileName:o,lineNumber:259}}))),l.default.createElement("span",{className:"dst-middle box",__source:{fileName:o,lineNumber:272}},l.default.createElement("span",{className:"dstm-info",__source:{fileName:o,lineNumber:273}},l.default.createElement("div",{className:"dstmi-icon",__source:{fileName:o,lineNumber:274}},l.default.createElement("svg",{className:"dstmii-svg",fill:"#00D4BC",__source:{fileName:o,lineNumber:275}},l.default.createElement("use",{xlinkHref:"#squadNumber",__source:{fileName:o,lineNumber:276}}))),l.default.createElement("div",{className:"dstmi-numb",__source:{fileName:o,lineNumber:279}},y?x:0),l.default.createElement("div",{className:"dstmi-desc",__source:{fileName:o,lineNumber:280}},"班级人数")),l.default.createElement("span",{className:"dstm-info",__source:{fileName:o,lineNumber:282}},l.default.createElement("div",{className:"dstmi-icon",__source:{fileName:o,lineNumber:283}},l.default.createElement("svg",{className:"dstmii-svg",fill:"#FFAB2B",__source:{fileName:o,lineNumber:284}},l.default.createElement("use",{xlinkHref:"#questionCount",__source:{fileName:o,lineNumber:285}}))),l.default.createElement("div",{className:"dstmi-numb",__source:{fileName:o,lineNumber:288}},y?(y.question_num/x).toFixed(0):0),l.default.createElement("div",{className:"dstmi-desc",__source:{fileName:o,lineNumber:289}},"平均做题数")),l.default.createElement("span",{className:"dstm-info",__source:{fileName:o,lineNumber:291}},l.default.createElement("div",{className:"dstmi-icon",__source:{fileName:o,lineNumber:292}},l.default.createElement("svg",{className:"dstmii-svg",fill:"#4D7CFE",__source:{fileName:o,lineNumber:293}},l.default.createElement("use",{xlinkHref:"#duration",__source:{fileName:o,lineNumber:294}}))),l.default.createElement("div",{className:"dstmi-numb",__source:{fileName:o,lineNumber:297}},y?(0,b.seconds2time)((y.teach_time/x).toFixed(0)):0),l.default.createElement("div",{className:"dstmi-desc",__source:{fileName:o,lineNumber:298}},"平均学习时长"))),l.default.createElement("span",{className:"dst-right box",__source:{fileName:o,lineNumber:301}},l.default.createElement(u.default,{title:"瓶颈知识点",hasMore:!0,moreDesc:"更多易错题目",moreClick:function(){h.default.push(g+"QuestionDisplay/type=squad/")},__source:{fileName:o,lineNumber:302}}),l.default.createElement("div",{className:"table-container dstr-wrongpoint",__source:{fileName:o,lineNumber:305}},k.length>0?l.default.createElement(p.default,{data:k,__source:{fileName:o,lineNumber:308}}):l.default.createElement("div",{className:"empty-text",__source:{fileName:o,lineNumber:309}},"暂无数据")))),l.default.createElement("div",{className:"ds-sectionlearn box",__source:{fileName:o,lineNumber:314}},l.default.createElement(u.default,{title:"小节学习",hasMore:!1,__source:{fileName:o,lineNumber:315}}),l.default.createElement(a.default,{size:"large",spinning:!s,__source:{fileName:o,lineNumber:316}},l.default.createElement("div",{className:"table-container",__source:{fileName:o,lineNumber:317}},l.default.createElement(c.default,{list:s,total_homework_num:y?y.squad.student_num:0,onChange:this.subsectionListOnChange,deleteFinish:"total"===t,noPagination:"homework"===t,__source:{fileName:o,lineNumber:318}})))),l.default.createElement("div",{className:"box",__source:{fileName:o,lineNumber:327}},l.default.createElement("div",{className:"ds-chartheader",__source:{fileName:o,lineNumber:329}},l.default.createElement("span",{className:"dsc-title",__source:{fileName:o,lineNumber:330}},"学生列表"),"homework"===t?l.default.createElement("span",{className:"dsc-btn",onClick:this.exportBtnClick,__source:{fileName:o,lineNumber:333}},l.default.createElement("svg",{className:"dscb-icon",__source:{fileName:o,lineNumber:334}},l.default.createElement("use",{xlinkHref:"#export",__source:{fileName:o,lineNumber:335}})),l.default.createElement("span",{className:"dscb-text",__source:{fileName:o,lineNumber:337}},"导出")):null),l.default.createElement(a.default,{size:"large",spinning:!v,__source:{fileName:o,lineNumber:342}},l.default.createElement("div",{className:"table-container",__source:{fileName:o,lineNumber:343}},"total"===t?l.default.createElement(m.default,{list:v,squad_id:w,pathname:g,onChange:this.studentListOnChange,__source:{fileName:o,lineNumber:346}}):l.default.createElement(d.default,{list:v,onChange:this.studentListOnChange,pathname:g,deleteCorrectRank:"total"===t,ref:"studenttable",__source:{fileName:o,lineNumber:350}})))))}}]),t}();t.default=(0,g.connect)(function(e){return{current_squad:e.current_squad,current_homework_id:e.current_homework_id}})(k)},1114:function(e,t,n){var a=n(1126);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(30)(a,r);a.locals&&(e.exports=a.locals)},1117:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=o(n(1)),i=o(n(1102));function o(e){return e&&e.__esModule?e:{default:e}}function s(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var l={comp:"#00D4BC",avg:"#4D7CFE",stuAccuracy:"#4D7CFE",warning:"#FFAB2B"},u=function(){function e(t){var n=t.container,a=t.value,r=t.warning,o=void 0!==r&&r,l=t.type,u=void 0===l?"comp":l,d=t.r_rate,m=void 0===d?.35:d;s(this,e),c.call(this),this.container=n,this.value=a,this.warning=o,this.type=u,this.r_rate=m,this.zr=new i.default.init(n)}return a(e,[{key:"calcOption",value:function(){var e=l,t=this.container.clientWidth,n=this.container.clientHeight,a=Math.min(t,n);this.innerOption={cx:.5*t,cy:.45*n,r:a*this.r_rate,startAngle:.5*-Math.PI,lineWidth:.03*a,fontSize:.15*a,bgColor:"#F5F5F5",textColor:"#666",color:this.value<.6?e.warning:e[this.type],ww:.1*a,wh:.1*a}}},{key:"setData",value:function(e){this.value=e,this.zr.clear(),this.render()}},{key:"getCircle",value:function(e){var t=e.cx,n=e.cy,a=e.r,r=e.color;return new i.default.Circle({shape:{cx:t,cy:n,r:a},style:{fill:r}})}},{key:"getWarningShape",value:function(e){var t=e.x,n=e.y,a=e.w,r=e.h,o=e.color,s=void 0===o?"#00D4BC":o,l=new i.default.Path.extend({shape:{w:0,h:0},buildPath:function(e,t){var n=t.w,a=t.h,r=.5*n,i=.5*a,o=.7*a;e.fillColor="red",e.moveTo(0,i),e.bezierCurveTo(0,.8*i,.2*r,0,r,0),e.bezierCurveTo(n-.2*r,0,n,.8*i,n,i),e.lineTo(n,a-4),e.arc(n,a-2,2,.5*-Math.PI,.5*Math.PI),e.lineTo(0,a),e.arc(0,a-2,2,.5*Math.PI,1.5*Math.PI),e.fillColor="transparent",e.moveTo(r-2,i-.5*o),e.arc(r,i-.5*o,2,-Math.PI,0),e.closePath()}}),u=new i.default.Path.extend({shape:{w:0,h:0},buildPath:function(e,t){var n=t.w,a=t.h,r=.5*n,i=.5*a,o=.25*a*.5;e.moveTo(r-1.6,i-o),e.arc(r,i-o,1.6,-Math.PI,0),e.lineTo(r+1.6,i+o),e.arc(r,i+o,1.6,0,Math.PI),e.moveTo(r,i+o+1.6*3),e.arc(r,i+o+1.6*3,1.6,0,2*Math.PI)}}),c=new i.default.Group({position:[t,n],shape:{w:a,h:r}}),d=new l({shape:{w:a,h:r},style:{fill:s}});c.add(d);var m=new u({position:[0,-2],shape:{w:a,h:r},style:{fill:"#fff"}});return c.add(m),c}},{key:"getArc",value:function(e){var t=e.cx,n=e.cy,a=e.r,r=e.startAngle,o=e.endAngle,s=e.lineWidth,l=e.color,u=this.getCircle({cx:t+a*Math.cos(r),cy:n+a*Math.sin(r),r:.5*s,color:l}),c=new i.default.Arc({shape:{cx:t,cy:n,r:a,startAngle:r,endAngle:r,clockwise:!0},style:{stroke:l,lineWidth:s},silent:!0});c.animateTo({shape:{endAngle:o}},1e3,"exponentialInOut");var d=t+a*Math.cos(o),m=n+a*Math.sin(o),f=this.getCircle({cx:d,cy:m,r:.5*s,color:l});return f.scale=[0,0],f.origin=[d,m],f.animateTo({scale:[1,1]},50,900),{startCircle:u,arc:c,endCircle:f}}},{key:"generateChart",value:function(){var e=this.innerOption,t=e.cx,n=e.cy,a=e.r,r=e.bgColor,o=e.color,s=e.lineWidth,u=e.fontSize,c=e.textColor,d=e.startAngle,m=e.ww,f=e.wh,h=this.value,p=this.type;this.bgRing=new i.default.Arc({shape:{cx:t,cy:n,r:a,startAngle:0,endAngle:2*Math.PI,clockwise:!0},style:{stroke:r,lineWidth:s,textFill:o,text:(100*h).toFixed(0)+"%",fontSize:u,fontWeight:500}}),this.zr.add(this.bgRing),this.arc=this.getArc({cx:t,cy:n,r:a,startAngle:d,endAngle:d+2*Math.PI*h,lineWidth:s,color:o}),this.zr.add(this.arc.startCircle),this.zr.add(this.arc.arc),this.zr.add(this.arc.endCircle),h<.6&&(this.warning=this.getWarningShape({x:t-.5*m,y:n+.7*u,w:m,h:f,color:l.warning}),this.zr.add(this.warning));var _="";switch(p){case"comp":_="作业完成率";break;case"avg":_="平均正确率";break;case"stuAccuracy":_="学生正确率";break;case"warning":_="班级正确率"}this.title=new i.default.Text({position:[t,n+1.4*a],style:{text:_,textFill:c,fontSize:.9*m,textAlign:"center"}}),this.zr.add(this.title)}},{key:"render",value:function(){this.calcOption(),this.generateChart(),window.addEventListener("resize",this.resize)}},{key:"dispose",value:function(){this.zr.dispose(),window.removeEventListener("resize",this.resize)}}]),e}(),c=function(){var e=this;this.resize=function(){e.zr.resize(),e.calcOption();var t=e.innerOption,n=t.cx,a=t.cy,r=t.r,i=t.startAngle,o=t.lineWidth,s=t.fontSize,l=t.ww,u=t.wh,c=e.value;e.bgRing.style.text=(100*c).toFixed(0)+"%",e.bgRing.animateTo({shape:{cx:n,cy:a,r:r},style:{lineWidth:o,fontSize:s}}),e.arc.startCircle.animateTo({shape:{cx:n+r*Math.cos(i),cy:a+r*Math.sin(i),r:.5*o}}),e.arc.arc.animateTo({shape:{cx:n,cy:a,r:r},style:{lineWidth:o}});var d=i+2*Math.PI*c,m=n+r*Math.cos(d),f=a+r*Math.sin(d);e.arc.endCircle.animateTo({shape:{cx:m,cy:f,r:.5*o}}),e.title.animateTo({position:[n,a+1.4*r],style:{fontSize:.9*l}}),e.warning&&(e.warning.animateTo({position:[n-.5*l,a+.7*s]}),e.warning._children.forEach(function(e){e.animateTo({shape:{w:l,h:u}})}))}},d=function(e){function t(e){s(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={preValue:0,container:null,chart:null},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.default.Component),a(t,[{key:"componentDidMount",value:function(){var e=this.props.data,t=e.id,n=e.type,a=e.r_rate,r=e.value,i=new u({container:document.getElementById(t),value:r||0,type:n,r_rate:a});i.render(),this.setState({chart:i})}},{key:"componentWillReceiveProps",value:function(e){if(e.data){var t=this.state,n=t.preValue,a=t.chart,r=e.data,i=(r.id,r.type,r.r_rate,r.value);n!==i&&(a&&a.setData(i),this.setState({preValue:i}))}}},{key:"componentWillUnmount",value:function(){var e=this.state.chart;e&&e.dispose()}},{key:"render",value:function(){var e=this.props.data.id;return r.default.createElement("div",{id:e,style:{width:"100%",height:"100%"},__source:{fileName:"/Users/levan/xizhi_teacher_front_v3.0/src/components/Chart/ringChart.js",lineNumber:391}})}}]),t}();t.default=d},1118:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r="/Users/levan/xizhi_teacher_front_v3.0/src/components/ChartHeader/index.js",i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(1),s=(a=o)&&a.__esModule?a:{default:a};function l(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}n(1122);var u=function(e){function t(){var e,n,a;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var r=arguments.length,i=Array(r),o=0;o<r;o++)i[o]=arguments[o];return n=a=l(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(i))),a.handleClick=function(){a.props.moreClick()},l(a,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.default.Component),i(t,[{key:"render",value:function(){var e=this,t=this.props,n=t.title,a=t.hasMore,i=t.moreDesc,o=t.legendone,l=t.legendtwo,u=t.legendthree,c=t.singleLine,d=t.lineType,m="singleLine "+("green"===d?"green":"blue"===d?"blue":"yellow");return s.default.createElement("div",{className:"chart-header",__source:{fileName:r,lineNumber:12}},s.default.createElement("span",{className:c?"title moreObvious":"title",__source:{fileName:r,lineNumber:13}},c?s.default.createElement("span",{className:m,__source:{fileName:r,lineNumber:16}}):null,n),!1===a?s.default.createElement("span",{__source:{fileName:r,lineNumber:23}},o?s.default.createElement("span",{__source:{fileName:r,lineNumber:26}},s.default.createElement("span",{className:"legendone",__source:{fileName:r,lineNumber:27}}),s.default.createElement("span",{className:l?"text marginright":"text",__source:{fileName:r,lineNumber:28}},o)):null,l?s.default.createElement("span",{__source:{fileName:r,lineNumber:35}},s.default.createElement("span",{className:"legendtwo",__source:{fileName:r,lineNumber:36}}),s.default.createElement("span",{className:u?"text marginright":"text",__source:{fileName:r,lineNumber:37}},l)):null,u?s.default.createElement("span",{__source:{fileName:r,lineNumber:43}},s.default.createElement("span",{className:"legendthree",__source:{fileName:r,lineNumber:44}}),s.default.createElement("span",{className:"text",__source:{fileName:r,lineNumber:45}},u)):null):s.default.createElement("span",{className:"more",onClick:function(){e.handleClick()},__source:{fileName:r,lineNumber:50}},s.default.createElement("span",{className:"text",__source:{fileName:r,lineNumber:53}},i),s.default.createElement("svg",{className:"icon",__source:{fileName:r,lineNumber:54}},s.default.createElement("use",{xlinkHref:"#corner",__source:{fileName:r,lineNumber:55}}))))}}]),t}();t.default=u},1122:function(e,t,n){var a=n(1123);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(30)(a,r);a.locals&&(e.exports=a.locals)},1123:function(e,t,n){(e.exports=n(29)(!1)).push([e.i,".chart-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 1.39vw;\n  width: 100%;\n  height: 4vw;\n  border-bottom: 2px solid #f5f5f5; }\n  .chart-header .title {\n    color: #666;\n    font-size: 1.11vw;\n    display: flex;\n    align-items: center; }\n    .chart-header .title .singleLine {\n      display: inline-block;\n      width: 4px;\n      height: 1.39vw;\n      border-radius: 3px;\n      margin-right: .83vw; }\n    .chart-header .title .green {\n      background: #00d4bc; }\n    .chart-header .title .blue {\n      background: #4D7CFE; }\n    .chart-header .title .yellow {\n      background: #FFAB2B; }\n  .chart-header .moreObvious {\n    color: #252525;\n    font-size: 1.25vw; }\n  .chart-header .legendone, .chart-header .legendtwo, .chart-header .legendthree {\n    display: inline-block;\n    width: .69vw;\n    height: .69vw;\n    border-radius: 50%;\n    margin-right: .69vw; }\n  .chart-header .legendone {\n    background: #00d4bc; }\n  .chart-header .legendtwo {\n    background: #4D7CFE; }\n  .chart-header .legendthree {\n    background: #FFAB2B; }\n  .chart-header .text {\n    font-weight: 500;\n    font-size: .83vw;\n    color: #b3b3b3; }\n  .chart-header .marginright {\n    margin-right: 2vw; }\n  .chart-header .more {\n    cursor: pointer; }\n    .chart-header .more .text {\n      font-size: .97vw;\n      color: #00d4bc;\n      margin-right: .97vw;\n      transition: all .5s; }\n    .chart-header .more .icon {\n      width: .49vw;\n      height: .83vw;\n      fill: #00d4bc; }\n  .chart-header .more:hover .text {\n    color: #23e0ca; }\n  .chart-header .more:hover .icon {\n    fill: #23e0ca; }\n",""])},1126:function(e,t,n){(e.exports=n(29)(!1)).push([e.i,"#components-table-demo-resizable-column .react-resizable {\n  position: relative; }\n\n#components-table-demo-resizable-column .react-resizable-handle {\n  position: absolute;\n  width: .69vw;\n  height: 100%;\n  bottom: 0;\n  right: -.35vw;\n  cursor: col-resize; }\n\n.firstCell {\n  color: #666; }\n\n.tableGray {\n  color: #999; }\n\n.tableGreen {\n  color: #00D4BC; }\n\n.tableRed {\n  color: #F13A30; }\n",""])},1127:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=u(n(1104)),r="/Users/levan/xizhi_teacher_front_v3.0/src/components/Crumb/index.js",i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();n(1105);var o=u(n(1));n(1128);var s=u(n(101)),l=n(243);function u(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var e=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.itemRender=function(e,t,n,a){return n.indexOf(e)===n.length-1?o.default.createElement("span",{__source:{fileName:r,lineNumber:126}},e.breadcrumbName):o.default.createElement("a",{onClick:function(){s.default.push(e.path)},__source:{fileName:r,lineNumber:126}},e.breadcrumbName)},e.state={routes:e.getRoutes()},e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),i(t,[{key:"getFirstCrumb",value:function(e){return/^\/SquadStat/.test(e)?{path:"/SquadStat/squad_id="+(0,l.getSquadId)(e)+"/",breadcrumbName:"班级详情"}:/^\/StudentManage/.test(e)?{path:"/StudentManage/",breadcrumbName:"学生管理"}:/^\/AssignHomework/.test(e)?{path:"/AssignHomework/",breadcrumbName:"布置作业"}:{path:"/",breadcrumbName:"最近作业"}}},{key:"getSecondCrumb",value:function(e){if(/DetailStat/.test(e)){var t=(0,l.getDetailType)(e);return{path:"/DetailStat/type="+t+"/",breadcrumbName:"homework"===t?"作业详情":"整体学情"}}return/StudentStat/.test(e)?{path:"/StudentStat/student_id="+(0,l.getStudentId)(e)+"/",breadcrumbName:"学生详情"}:/QuestionDisplay/.test(e)?{path:"/QuestionDisplay/type="+(0,l.getQuestionType)(e)+"/",breadcrumbName:"易错题目"}:null}},{key:"getThirdCrumb",value:function(e,t){return t&&!/StudentStat/.test(t.path)&&/StudentStat/.test(e)?{path:"/StudentStat/student_id="+(0,l.getStudentId)(e)+"/",breadcrumbName:"学生详情"}:t&&!/QuestionDisplay/.test(t.path)&&/QuestionDisplay/.test(e)?{path:"/QuestionDisplay/type="+(0,l.getQuestionType)(e)+"/",breadcrumbName:"易错题目"}:null}},{key:"getFourthCrumb",value:function(e,t){return t&&!/QuestionDisplay/.test(t.path)&&/QuestionDisplay/.test(e)?{path:"/QuestionDisplay/type="+(0,l.getQuestionType)(e)+"/",breadcrumbName:"易错题目"}:null}},{key:"getRoutes",value:function(){var e=[],t=s.default.location.pathname,n=this.getFirstCrumb(t),a=this.getSecondCrumb(t);e.push(n),a&&e.push({path:(n.path+a.path).replace(/\/\//g,"/"),breadcrumbName:a.breadcrumbName});var r=this.getThirdCrumb(t,a);r&&e.push({path:(n.path+a.path+r.path).replace(/\/\//g,"/"),breadcrumbName:r.breadcrumbName});var i=this.getFourthCrumb(t,r);return i&&e.push({path:(n.path+a.path+r.path+i.path).replace(/\/\//g,"/"),breadcrumbName:i.breadcrumbName}),e}},{key:"render",value:function(){var e=this.state.routes;return o.default.createElement("div",{className:"crumbs",__source:{fileName:r,lineNumber:134}},o.default.createElement("span",{className:"c-goback",onClick:function(){s.default.goBack()},__source:{fileName:r,lineNumber:135}},o.default.createElement("svg",{className:"cg-icon",__source:{fileName:r,lineNumber:138}},o.default.createElement("use",{xlinkHref:"#goback",__source:{fileName:r,lineNumber:139}}))),o.default.createElement(a.default,{separator:">",itemRender:this.itemRender,routes:e,__source:{fileName:r,lineNumber:142}}))}}]),t}();t.default=c},1128:function(e,t,n){var a=n(1129);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(30)(a,r);a.locals&&(e.exports=a.locals)},1129:function(e,t,n){(e.exports=n(29)(!1)).push([e.i,".crumbs {\n  height: 5.07vw;\n  line-height: 5.07vw; }\n  .crumbs .c-goback {\n    display: inline-block;\n    margin-right: .83vw;\n    width: 2.78vw;\n    height: 2.78vw;\n    line-height: 2.78vw;\n    text-align: center;\n    cursor: pointer;\n    border-radius: 4px;\n    border: 2px solid whitesmoke;\n    background: #fff;\n    transition: all .5s; }\n    .crumbs .c-goback .cg-icon {\n      fill: #D8D8D8;\n      width: .9vw;\n      height: .9vw;\n      transition: all .5s; }\n  .crumbs .c-goback:hover {\n    border-color: #00D4BC; }\n  .crumbs .c-goback:hover .cg-icon {\n    fill: #00D4BC; }\n",""])},1136:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=d(n(1099)),r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o="/Users/levan/xizhi_teacher_front_v3.0/src/components/Table/squadTable.js";n(1100);var s=d(n(1)),l=n(1101);n(1114);var u=d(n(101)),c=n(243);function d(e){return e&&e.__esModule?e:{default:e}}var m=function(e){var t=e.onResize,n=e.width,a=function(e,t){var n={};for(var a in e)t.indexOf(a)>=0||Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a]);return n}(e,["onResize","width"]);return n?s.default.createElement(l.Resizable,{width:n,height:0,onResize:t,__source:{fileName:o,lineNumber:16}},s.default.createElement("th",i({},a,{__source:{fileName:o,lineNumber:17}}))):s.default.createElement("th",i({},a,{__source:{fileName:o,lineNumber:12}}))},f=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.components={header:{cell:m}},n.handleResize=function(e){return function(t,a){var r=a.size;n.setState(function(t){var n=t.columns,a=[].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(n));return a[e]=i({},a[e],{width:r.width}),{columns:a}})}},n.state={list:null,pathname:"",headerstate:null},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.default.Component),r(t,[{key:"componentDidMount",value:function(){this.setList(this.props)}},{key:"componentWillReceiveProps",value:function(e){this.setList(e)}},{key:"setList",value:function(e){var t=e.list;if(t){var n={data:[],page:t.page,page_num:t.page_num};n.data=t.data.map(function(e){var t=0===e.question_info.question_num?"0%":(e.question_info.correct_question_num/e.question_info.question_num*100).toFixed(0)+"%",n=0===e.total_homework_num?"0%":(e.finished_num/e.total_homework_num*100).toFixed(0)+"%";return{id:e.student.id?e.student.id:e.student.student_id?e.student.student_id:"",student_name:e.student.name,phone:e.question_info.phone,finish_rate:n,accuracy:t,question_num:e.question_info.question_num,do_question_time:(0,c.seconds2time)(e.question_info.do_question_time),teach_time:(0,c.seconds2time)(e.question_info.teach_time),last_learned:e.last_learned?(0,c.getFormateDate)(1e3*e.last_learned):"无",squad_name:e.student?e.student.squad.name:"",key:e.student.id?e.student.id:e.student.student_id?e.student.student_id:""}});var a={columns:[{title:"学生名称",dataIndex:"student_name",render:function(e){return s.default.createElement("span",{className:"firstCell",__source:{fileName:o,lineNumber:72}},e)},key:"student_name",sorter:!0},{title:"手机号",dataIndex:"phone",key:"phone",sorter:!0},{title:"作业完成率",dataIndex:"finish_rate",key:"finish_rate",sorter:!0},{title:"正确率",dataIndex:"accuracy",key:"accuracy",sorter:!0},{title:"做题数",dataIndex:"question_num",key:"question_num",sorter:!0},{title:"做题时长",dataIndex:"do_question_time",key:"do_question_time",sorter:!0},{title:"学习时长",dataIndex:"teach_time",key:"teach_time",sorter:!0},{title:"上次学习时间",dataIndex:"last_learned",key:"last_learned",sorter:!0},{title:"操作",key:"action",render:function(t){return s.default.createElement("a",{href:"javascript:;",onClick:function(){return u.default.push(e.pathname+"StudentStat/student_id="+t.id+"/")},__source:{fileName:o,lineNumber:114}},"查看详情")}}]};e.deleteRankChange&&(a.columns=a.columns.filter(function(e){return"排名变化"!==e.title})),e.deleteCorrectRank&&(a.columns=a.columns.filter(function(e){return"正确率排名"!==e.title})),e.showSquad&&a.columns.splice(1,0,{title:"班级",dataIndex:"squad_name",key:"squad_name",sorter:!0}),this.setState({list:n,headerstate:a})}}},{key:"render",value:function(){var e=this,t=this.state,n=t.list,r=t.headerstate,l=this.props.onChange,u=r&&r.columns.map(function(t,n){return i({},t,{align:"center",onHeaderCell:function(t){return{width:t.width,onResize:e.handleResize(n)}}})});return s.default.createElement(a.default,{bordered:!0,components:this.components,columns:u,dataSource:n&&n.data,pagination:{position:"bottom",size:"small",defaultCurrent:n&&n.page,pageSize:15,total:n&&15*n.page_num},onChange:l,__source:{fileName:o,lineNumber:174}})}}]),t}();t.default=f},1137:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=m(n(1099)),r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o="/Users/levan/xizhi_teacher_front_v3.0/src/components/Table/studentTable.js";n(1100);var s=m(n(1)),l=n(1101);n(1114);var u=m(n(101)),c=n(243),d=n(1138);function m(e){return e&&e.__esModule?e:{default:e}}var f=function(e){var t=e.onResize,n=e.width,a=function(e,t){var n={};for(var a in e)t.indexOf(a)>=0||Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a]);return n}(e,["onResize","width"]);return n?s.default.createElement(l.Resizable,{width:n,height:0,onResize:t,__source:{fileName:o,lineNumber:17}},s.default.createElement("th",i({},a,{__source:{fileName:o,lineNumber:18}}))):s.default.createElement("th",i({},a,{__source:{fileName:o,lineNumber:13}}))},h=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.components={header:{cell:f}},n.handleResize=function(e){return function(t,a){var r=a.size;n.setState(function(t){var n=t.columns,a=[].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(n));return a[e]=i({},a[e],{width:r.width}),{columns:a}})}},n.state={list:[],pathname:"",headerstate:null},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.default.Component),r(t,[{key:"componentDidMount",value:function(){this.setList(this.props)}},{key:"componentWillReceiveProps",value:function(e){this.setList(e)}},{key:"setList",value:function(e){var t=e.list;if(t){e.exportStudentList&&e.exportStudentList(self);var n={data:[],page:t.page,page_num:t.page_num};n.data=t.data.map(function(e){var t=0===e.question_num?"0%":(e.correct_question_num/e.question_num*100).toFixed(0)+"%",n=0;return n=e.total_homework_num?0===e.total_homework_num?"0%":(e.finished_num/e.total_homework_num*100).toFixed(0)+"%":0===e.question_num?"0%":(e.finished_num/e.question_num*100).toFixed(0)+"%",{id:e.student.id?e.student.id:e.student.student_id?e.student.student_id:"",name:e.student.name,phone:e.phone,finish_rate:n,accuracy:t,question_num:e.question_num,correct_prob_index:e.correct_prob_index,raise_value:e.raise_value,do_question_time:(0,c.seconds2time)(e.do_question_time),teach_time:(0,c.seconds2time)(e.teach_time),last_learned:e.last_learned?(0,c.getFormateDate)(1e3*e.last_learned):"无",squad_name:e.student?e.student.squad.name:"",key:e.student.id?e.student.id:e.student.student_id?e.student.student_id:""}});var a={columns:[{title:"学生名称",dataIndex:"name",render:function(e){return s.default.createElement("span",{className:"firstCell",__source:{fileName:o,lineNumber:85}},e)},key:"name",sorter:!0},{title:"手机号",dataIndex:"phone",key:"phone",sorter:!0},{title:"作业完成率",dataIndex:"finish_rate",key:"finish_rate",sorter:!0},{title:"正确率",dataIndex:"accuracy",key:"accuracy",sorter:!0},{title:"做题数",dataIndex:"question_num",key:"question_num",sorter:!0},{title:"正确率排名",dataIndex:"correct_prob_index",key:"correct_prob_index",sorter:!0},{title:"排名变化",dataIndex:"raise_value",render:function(e){return s.default.createElement("span",{className:0==e?"tableGray":parseInt(e)>0?"tableGreen":"tableRed",__source:{fileName:o,lineNumber:117}},e)},key:"raise_value",sorter:!0},{title:"做题时长",dataIndex:"do_question_time",key:"dataIndex",sorter:!0},{title:"学习时长",dataIndex:"teach_time",key:"teach_time",sorter:!0},{title:"上次学习时间",dataIndex:"last_learned",key:"last_learned",sorter:!0},{title:"操作",key:"action",render:function(t){return s.default.createElement("a",{href:"javascript:;",onClick:function(){return u.default.push(e.pathname+"StudentStat/student_id="+t.id+"/")},__source:{fileName:o,lineNumber:140}},"查看详情")}}]};e.deleteRankChange&&(a.columns=a.columns.filter(function(e){return"排名变化"!==e.title})),e.deleteCorrectRank&&(a.columns=a.columns.filter(function(e){return"正确率排名"!==e.title})),e.showSquad&&a.columns.splice(1,0,{title:"班级",dataIndex:"squad_name",key:"squad_name",sorter:!0}),this.setState({list:n,headerstate:a})}}},{key:"exportList",value:function(){var e={data:this.state.list.data,fileName:"学生列表",columns:{title:["学生名称","作业完成率","正确率","做题数","正确率排名","排名变化","做题时长","学习时长","上次学习时间"],key:["name","finish_rate","accuracy","question_num","correct_prob_index","raise_value","do_question_time","teach_time","last_learned"]}};d.JSonToCSV.setDataConver(e)}},{key:"render",value:function(){var e=this,t=this.state,n=t.list,r=t.headerstate,l=this.props.onChange,u=r&&r.columns.map(function(t,n){return i({},t,{align:"center",onHeaderCell:function(t){return{width:t.width,onResize:e.handleResize(n)}}})});return s.default.createElement(a.default,{bordered:!0,components:this.components,columns:u,dataSource:n.data,pagination:{position:"bottom",size:"small",defaultCurrent:n.page,pageSize:15,total:15*n.page_num},onChange:l,__source:{fileName:o,lineNumber:212}})}}]),t}();t.default=h},1138:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.JSonToCSV={setDataConver:function(e){var t,n=e.data,a=void 0===e.showLabel||e.showLabel,r=(e.fileName||"UserExport")+".csv",i=e.columns||{title:[],key:[],formatter:void 0},o="",s="";if(a=void 0===a||a){if(i.title.length)i.title.map(function(e){o+=e+","});else for(t in n[0])o+=t+",";o=o.slice(0,-1),s+=o+"\r\n"}n.map(function(e){if(o="",i.key.length)i.key.map(function(t){o+='"'+("function"==typeof i.formatter&&i.formatter(t,e[t])||e[t])+'",'});else for(t in e)o+='"'+("function"==typeof i.formatter&&i.formatter(t,e[t])||e[t])+'",';o.slice(0,o.length-1),s+=o+"\r\n"}),s&&this.SaveAs(r,s)},SaveAs:function(e,t){var n=this.browser();if(!n.edge||!n.ie){var a=document.createElement("a");a.id="linkDwnldLink",a.href=this.getDownloadUrl(t),document.body.appendChild(a);var r=document.getElementById("linkDwnldLink");r.setAttribute("download",e),r.click(),document.body.removeChild(r)}},getDownloadUrl:function(e){if(window.Blob&&window.URL&&window.URL.createObjectURL){e=new Blob(["\ufeff"+e],{type:"text/csv"});return URL.createObjectURL(e)}},browser:function(){var e,t={},n=navigator.userAgent.toLowerCase();return(e=-1!==n.indexOf("edge")?t.edge="edge":n.match(/rv:([\d.]+)\) like gecko/))?t.ie=e[1]:(e=n.match(/msie ([\d.]+)/))?t.ie=e[1]:(e=n.match(/firefox\/([\d.]+)/))?t.firefox=e[1]:(e=n.match(/chrome\/([\d.]+)/))?t.chrome=e[1]:(e=n.match(/opera.([\d.]+)/))?t.opera=e[1]:(e=n.match(/version\/([\d.]+).*safari/))&&(t.safari=e[1]),t}},t.deepCopyObject=function(e){return JSON.parse(JSON.stringify(e))}},1145:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r="/Users/levan/xizhi_teacher_front_v3.0/src/components/WeakTopics/index.js";t.default=function(e){var t=e.data;return s.default.createElement("div",{className:"weak-topics",__source:{fileName:r,lineNumber:26}},t.map(function(e,t){return s.default.createElement("span",{className:"wt-item",style:a({},l[t%l.length]),key:t,__source:{fileName:r,lineNumber:29}},e)}))};var i,o=n(1),s=(i=o)&&i.__esModule?i:{default:i};n(1146);var l=[{color:"#2ABDB2",background:"#D9F9F6"},{color:"#325FD9",background:"#E0E7FA"},{color:"#DF8F14",background:"#FEEACC"},{color:"#E35C87",background:"#FFDCE6"}]},1146:function(e,t,n){var a=n(1147);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(30)(a,r);a.locals&&(e.exports=a.locals)},1147:function(e,t,n){(e.exports=n(29)(!1)).push([e.i,".weak-topics {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-content: flex-start;\n  overflow: auto; }\n  .weak-topics .wt-item {\n    display: inline-block;\n    height: 2.08vw;\n    line-height: 2.08vw;\n    margin-bottom: .83vw;\n    margin-right: .69vw;\n    padding: 0 .69vw;\n    border-radius: 4px;\n    font-size: .83vw; }\n",""])},1328:function(e,t,n){var a=n(1329);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(30)(a,r);a.locals&&(e.exports=a.locals)},1329:function(e,t,n){(e.exports=n(29)(!1)).push([e.i,".detailstat {\n  background: #fafafa;\n  padding: 0 2.08vw;\n  padding-bottom: 8.4vw; }\n  .detailstat .ds-select {\n    margin-bottom: 1.39vw; }\n  .detailstat .ds-topinfo {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    height: 12.78vw;\n    margin-bottom: 1.39vw; }\n    .detailstat .ds-topinfo .dst-left {\n      display: inline-block;\n      width: 27%;\n      height: 100%;\n      display: flex;\n      justify-content: space-between; }\n      .detailstat .ds-topinfo .dst-left .dstl-chart {\n        display: inline-block;\n        width: 50%;\n        height: 100%; }\n    .detailstat .ds-topinfo .dst-middle {\n      display: inline-block;\n      width: 38%;\n      height: 100%;\n      display: flex;\n      justify-content: space-between; }\n      .detailstat .ds-topinfo .dst-middle .dstm-info {\n        width: 33%;\n        height: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column; }\n        .detailstat .ds-topinfo .dst-middle .dstm-info .dstmi-icon {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          width: 4.2vw;\n          height: 4.2vw;\n          border: 2px solid #f5f5f5;\n          border-radius: 50%; }\n          .detailstat .ds-topinfo .dst-middle .dstm-info .dstmi-icon .dstmii-svg {\n            width: 1.6vw;\n            height: 1.6vw; }\n        .detailstat .ds-topinfo .dst-middle .dstm-info .dstmi-numb {\n          font-size: 1.8vw;\n          color: #666; }\n        .detailstat .ds-topinfo .dst-middle .dstm-info .dstmi-desc {\n          font-size: .97vw;\n          color: #999; }\n    .detailstat .ds-topinfo .dst-right {\n      display: inline-block;\n      width: 30%;\n      height: 100%; }\n      .detailstat .ds-topinfo .dst-right .dstr-wrongpoint {\n        display: flex; }\n  .detailstat .ds-sectionlearn {\n    width: 100%;\n    margin-bottom: 1.39vw; }\n  .detailstat .ds-chartheader {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 1.39vw;\n    width: 100%;\n    height: 4.02vw;\n    border-bottom: 2px solid #f5f5f5; }\n    .detailstat .ds-chartheader .dsc-title {\n      color: #666;\n      font-size: 1.11vw;\n      display: flex;\n      align-items: center; }\n    .detailstat .ds-chartheader .dsc-btn {\n      display: flex;\n      align-items: center;\n      width: 6.94vw;\n      height: 2.78vw;\n      padding: 0 1.39vw;\n      justify-content: space-between;\n      background: #00d4bc;\n      cursor: pointer;\n      border-radius: 5px; }\n      .detailstat .ds-chartheader .dsc-btn .dscb-icon {\n        width: 1.32vw;\n        height: 1.32vw;\n        fill: #fff;\n        transition: transform 0.5s cubic-bezier(0.2, 0.6, 0.3, 1), -webkit-transform 0.5s cubic-bezier(0.2, 0.6, 0.3, 1); }\n      .detailstat .ds-chartheader .dsc-btn .dscb-text {\n        color: #fff; }\n    .detailstat .ds-chartheader .dsc-btn:hover {\n      background: #23e0ca; }\n      .detailstat .ds-chartheader .dsc-btn:hover .dscb-icon {\n        transform: scale(1.2) translateZ(0);\n        -webkit-transform: scale(1.2) translateZ(0); }\n\n.ant-select-dropdown {\n  font-size: .97vw; }\n",""])},1330:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=c(n(1099)),r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o="/Users/levan/xizhi_teacher_front_v3.0/src/components/Table/subsectionTable.js";n(1100);var s=c(n(1)),l=n(1101);n(1114);c(n(101));var u=n(243);function c(e){return e&&e.__esModule?e:{default:e}}var d=function(e){var t=e.onResize,n=e.width,a=function(e,t){var n={};for(var a in e)t.indexOf(a)>=0||Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a]);return n}(e,["onResize","width"]);return n?s.default.createElement(l.Resizable,{width:n,height:0,onResize:t,__source:{fileName:o,lineNumber:16}},s.default.createElement("th",i({},a,{__source:{fileName:o,lineNumber:17}}))):s.default.createElement("th",i({},a,{__source:{fileName:o,lineNumber:12}}))},m=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.components={header:{cell:d}},n.handleResize=function(e){return function(t,a){var r=a.size;n.setState(function(t){var n=t.columns,a=[].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(n));return a[e]=i({},a[e],{width:r.width}),{columns:a}})}},n.state={list:[],headerstate:{columns:[{title:"小节",dataIndex:"name",render:function(e){return s.default.createElement("span",{className:"firstCell",__source:{fileName:o,lineNumber:31}},e)},key:"name"},{title:"完成学生数",dataIndex:"finished_num",key:"finished_num"},{title:"班级平均正确率",dataIndex:"avg_correct",key:"avg_correct"},{title:"平均做题数",dataIndex:"question_num",key:"question_num"},{title:"平均做题时长",dataIndex:"do_question_time",key:"do_question_time"},{title:"平均学习时长",dataIndex:"teach_time",key:"teach_time"},{title:"瓶颈知识点",dataIndex:"weak_topics",key:"weak_topics"}]}},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.default.Component),r(t,[{key:"componentDidMount",value:function(){this.setList(this.props)}},{key:"componentWillReceiveProps",value:function(e){this.setList(e)}},{key:"setList",value:function(e){var t=this.state.headerstate,n=e.list,a=e.total_homework_num;if(n){var r={data:[],page:n.page,page_num:n.page_num};r.data=n.data.map(function(e){var t=0===e.question_num?"0%":(e.correct_question_num/e.question_num*100).toFixed(0)+"%",n=e.weak_topics.length>0?e.weak_topics.map(function(e){return e.name}).slice(0,5).join("、"):"无";return{name:e.subsection?e.subsection.name:e.name,finished_num:e.finished_num,avg_correct:t,question_num:a?(e.question_num/a).toFixed(0):0,do_question_time:a?(0,u.seconds2time)((e.do_question_time/a).toFixed(0)):0,teach_time:a?(0,u.seconds2time)((e.teach_time/a).toFixed(0)):0,weak_topics:n,key:e.subsection?e.subsection.name:e.name}});var i=t;e.deleteFinish&&(i.columns=t.columns.filter(function(e){return"完成学生数"!==e.title})),this.setState({list:r,headerstate:i})}}},{key:"render",value:function(){var e=this,t=this.state,n=t.list,r=t.headerstate,l=this.props,u=l.noPagination,c=l.onChange,d={position:"bottom",size:"small",defaultCurrent:n.page,pageSize:15,total:15*n.page_num},m=r.columns.map(function(t,n){return i({},t,{align:"center",onHeaderCell:function(t){return{width:t.width,onResize:e.handleResize(n)}}})});return s.default.createElement(a.default,{bordered:!0,components:this.components,columns:m,dataSource:n.data,pagination:!u&&d,onChange:c,__source:{fileName:o,lineNumber:151}})}}]),t}();t.default=m}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvUGFnZXMvRGV0YWlsU3RhdC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9UYWJsZS9pbmRleC5zY3NzP2VhYTIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvQ2hhcnQvcmluZ0NoYXJ0LmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0NoYXJ0SGVhZGVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0NoYXJ0SGVhZGVyL2luZGV4LnNjc3M/NmI2YiIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9DaGFydEhlYWRlci9pbmRleC5zY3NzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1RhYmxlL2luZGV4LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvQ3J1bWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvQ3J1bWIvaW5kZXguc2Nzcz9jNzg1Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0NydW1iL2luZGV4LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvVGFibGUvc3F1YWRUYWJsZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9UYWJsZS9zdHVkZW50VGFibGUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL0pzb25Ub0NTVi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9XZWFrVG9waWNzL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1dlYWtUb3BpY3MvaW5kZXguc2Nzcz8zNzlmIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1dlYWtUb3BpY3MvaW5kZXguc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvUGFnZXMvRGV0YWlsU3RhdC9pbmRleC5zY3NzPzY0YzUiLCJ3ZWJwYWNrOi8vLy4vc3JjL1BhZ2VzL0RldGFpbFN0YXQvaW5kZXguc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9UYWJsZS9zdWJzZWN0aW9uVGFibGUuanMiXSwibmFtZXMiOlsiX193ZWJwYWNrX3JlcXVpcmVfXyIsIl91dGlsIiwiX3VybE1hcCIsIl9yZWFjdFJlZHV4IiwiX2FjdGlvbiIsIk9wdGlvbiIsIl9zZWxlY3QyIiwiZGVmYXVsdCIsIkRldGFpbFN0YXQiLCJfY2xhc3NDYWxsQ2hlY2siLCJ0aGlzIiwiX3RoaXMiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIl9fcHJvdG9fXyIsIk9iamVjdCIsImdldFByb3RvdHlwZU9mIiwiY2FsbCIsImhhbmRsZUNoYW5nZSIsInZhbHVlIiwiX3RoaXMkc3RhdGUiLCJzdGF0ZSIsInR5cGUiLCJjdXJyZW50X2hvbWV3b3JrX2lkIiwic2V0U3RhdGUiLCJnZXRIb21ld29ya0RhdGEiLCJnZXRIb21ld29ya1N1YnNlY3Rpb25EYXRhIiwiZ2V0SG9tZXdvcmtTdHVkZW50RGF0YSIsInByb3BzIiwiZGlzcGF0Y2giLCJzZXRIb21ld29ya0lkIiwic3Vic2VjdGlvbkxpc3RPbkNoYW5nZSIsInBhZ2luYXRpb24iLCJnZXREYXRhIiwicGFnZSIsImN1cnJlbnQiLCJfdGhpcyRzdGF0ZTIiLCJzcXVhZF9pZCIsImdldFNxdWFkU3Vic2VjdGlvbkRhdGEiLCJzdHVkZW50TGlzdE9uQ2hhbmdlIiwiZmlsdGVyIiwic29ydGVyIiwiX3RoaXMkc3RhdGUzIiwicGFyYW0iLCJpc0VtcHR5IiwiaXNPYmplY3RFbXB0eSIsIm9yZGVyIiwib3JkZXJpbmciLCJmaWVsZCIsImdldFNxdWFkU3R1ZGVudERhdGEiLCJleHBvcnRCdG5DbGljayIsInN0dWRlbnRzIiwiZGF0YSIsImxlbmd0aCIsInJlZnMiLCJzdHVkZW50dGFibGUiLCJleHBvcnRMaXN0IiwiX21lc3NhZ2UzIiwid2FybmluZyIsInBhdGgiLCJoaXN0b3J5IiwibG9jYXRpb24iLCJwYXRobmFtZSIsImdldERldGFpbFR5cGUiLCJnZXRTcXVhZElkIiwiaG9tZXdvcmtfbGlzdCIsInN1YnNlY3Rpb25fbGlzdCIsImhvbWV3b3JrX2RhdGEiLCJSZWFjdCIsIkNvbXBvbmVudCIsIl90aGlzMiIsIl9zdGF0ZSIsImdldFNxdWFkSG9tZXdvcmtzIiwidGhlbiIsInJlcyIsImlzVW5tb3VudGVkIiwiaG9tZXdvcmtfaWQiLCJnZXRTcXVhZFRvdGFsRGV0YWlsIiwicXVlc3Rpb25faW5mbyIsInF1ZXN0aW9uIiwic2V0U3ViZWN0aW9uUGF0aCIsImJvb2siLCJjaGFwdGVyIiwic2VjdGlvbiIsInN1YnNlY3Rpb25zIiwicGFyYW1zIiwiX3RoaXMzIiwiZ2V0U3F1YWRTdHVkZW50IiwiX3RoaXM0IiwiZ2V0U3F1YWRTdWJzZWN0aW9uIiwiX3RoaXM1IiwiZ2V0SG9tZXdvcmtEZXRhaWwiLCJfdGhpczYiLCJnZXRIb21ld29ya1N1YnNlY3Rpb25zIiwicGFnZV9udW0iLCJfdGhpczciLCJnZXRIb21ld29ya1N0dWRlbnQiLCJfc3RhdGUyIiwid2Vha190b3BpY3MiLCJtYXAiLCJlIiwibmFtZSIsInNxdWFkX251bSIsInRvdGFsX2hvbWV3b3JrX251bSIsInNxdWFkIiwic3R1ZGVudF9udW0iLCJfcmVhY3QyIiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsIl9fc291cmNlIiwiZmlsZU5hbWUiLCJfanN4RmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwiX0NydW1iMiIsInNob3dTZWFyY2hhIiwic3R5bGUiLCJ3aWR0aCIsImJhY2tncm91bmQiLCJib3JkZXIiLCJwbGFjZWhvbGRlciIsIm9uQ2hhbmdlIiwiaSIsImtleSIsIl9yaW5nQ2hhcnQyIiwiaWQiLCJyX3JhdGUiLCJmaW5pc2hlZF9udW0iLCJxdWVzdGlvbl9udW0iLCJjb3JyZWN0X3F1ZXN0aW9uX251bSIsImZpbGwiLCJ4bGlua0hyZWYiLCJ0b0ZpeGVkIiwic2Vjb25kczJ0aW1lIiwidGVhY2hfdGltZSIsIl9DaGFydEhlYWRlcjIiLCJ0aXRsZSIsImhhc01vcmUiLCJtb3JlRGVzYyIsIm1vcmVDbGljayIsInB1c2giLCJfV2Vha1RvcGljczIiLCJfc3BpbjIiLCJzaXplIiwic3Bpbm5pbmciLCJfc3Vic2VjdGlvblRhYmxlMiIsImxpc3QiLCJkZWxldGVGaW5pc2giLCJub1BhZ2luYXRpb24iLCJvbkNsaWNrIiwiX3NxdWFkVGFibGUyIiwiX3N0dWRlbnRUYWJsZTIiLCJkZWxldGVDb3JyZWN0UmFuayIsInJlZiIsImNvbm5lY3QiLCJjdXJyZW50X3NxdWFkIiwiY29udGVudCIsIm1vZHVsZSIsIm9wdGlvbnMiLCJobXIiLCJ0cmFuc2Zvcm0iLCJpbnNlcnRJbnRvIiwidW5kZWZpbmVkIiwibG9jYWxzIiwiZXhwb3J0cyIsImRlZmF1bHRPcHRpb24iLCJjb21wIiwiYXZnIiwic3R1QWNjdXJhY3kiLCJSaW5nQ2hhcnQiLCJfcmVmIiwiY29udGFpbmVyIiwiX3JlZiR3YXJuaW5nIiwiX3JlZiR0eXBlIiwiX3JlZiRyX3JhdGUiLCJfaW5pdGlhbGlzZVByb3BzIiwienIiLCJ6cmVuZGVyIiwiaW5pdCIsImNvbG9yIiwidyIsImNsaWVudFdpZHRoIiwiaCIsImNsaWVudEhlaWdodCIsIk1hdGgiLCJtaW4iLCJpbm5lck9wdGlvbiIsImN4IiwiY3kiLCJyIiwic3RhcnRBbmdsZSIsIlBJIiwibGluZVdpZHRoIiwiZm9udFNpemUiLCJiZ0NvbG9yIiwidGV4dENvbG9yIiwid3ciLCJ3aCIsImNsZWFyIiwicmVuZGVyIiwiX3JlZjIiLCJDaXJjbGUiLCJzaGFwZSIsIngiLCJfcmVmMyIsInkiLCJfcmVmMyRjb2xvciIsIlBhdGgiLCJleHRlbmQiLCJidWlsZFBhdGgiLCJleGNsYW1hdGlvbkxlbmd0aCIsImZpbGxDb2xvciIsIm1vdmVUbyIsImJlemllckN1cnZlVG8iLCJsaW5lVG8iLCJsciIsImFyYyIsImNsb3NlUGF0aCIsImV4Y2xhbWF0aW9uIiwiZyIsIkdyb3VwIiwicG9zaXRpb24iLCJ3biIsImFkZCIsImV4IiwiX3JlZjQiLCJlbmRBbmdsZSIsInN0YXJ0Q2lyY2xlIiwiZ2V0Q2lyY2xlIiwiY29zIiwic2luIiwiQXJjIiwiY2xvY2t3aXNlIiwic3Ryb2tlIiwic2lsZW50IiwiYW5pbWF0ZVRvIiwiZWN4IiwiZWN5IiwiZW5kQ2lyY2xlIiwic2NhbGUiLCJvcmlnaW4iLCJfaW5uZXJPcHRpb24iLCJiZ1JpbmciLCJ0ZXh0RmlsbCIsInRleHQiLCJmb250V2VpZ2h0IiwiZ2V0QXJjIiwiZ2V0V2FybmluZ1NoYXBlIiwidCIsIlRleHQiLCJ0ZXh0QWxpZ24iLCJjYWxjT3B0aW9uIiwiZ2VuZXJhdGVDaGFydCIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZXNpemUiLCJkaXNwb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIl9pbm5lck9wdGlvbjIiLCJfY2hpbGRyZW4iLCJmb3JFYWNoIiwiUmluZyIsInByZVZhbHVlIiwiY2hhcnQiLCJfcHJvcHMkZGF0YSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJuZXh0UHJvcHMiLCJfbmV4dFByb3BzJGRhdGEiLCJzZXREYXRhIiwiaGVpZ2h0IiwiX3JlYWN0IiwiQ2hhcnRIZWFkZXIiLCJoYW5kbGVDbGljayIsIl9wcm9wcyIsImxlZ2VuZG9uZSIsImxlZ2VuZHR3byIsImxlZ2VuZHRocmVlIiwic2luZ2xlTGluZSIsImxpbmVUeXBlIiwibGluZVN0eWxlIiwiQ3VybWIiLCJpdGVtUmVuZGVyIiwicm91dGUiLCJyb3V0ZXMiLCJwYXRocyIsImluZGV4T2YiLCJicmVhZGNydW1iTmFtZSIsImdldFJvdXRlcyIsInRlc3QiLCJnZXRTdHVkZW50SWQiLCJnZXRRdWVzdGlvblR5cGUiLCJzZWNvbmQiLCJ0aGlyZCIsImZpcnN0IiwiZ2V0Rmlyc3RDcnVtYiIsImdldFNlY29uZENydW1iIiwicmVwbGFjZSIsImdldFRoaXJkQ3J1bWIiLCJmb3VydGgiLCJnZXRGb3VydGhDcnVtYiIsImdvQmFjayIsIl9icmVhZGNydW1iMiIsInNlcGFyYXRvciIsIl9yZWFjdFJlc2l6YWJsZSIsIlJlc2l6ZWFibGVUaXRsZSIsIm9uUmVzaXplIiwicmVzdFByb3BzIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiUmVzaXphYmxlIiwiX2V4dGVuZHMiLCJDdXN0b21UYWJsZSIsImNvbXBvbmVudHMiLCJoZWFkZXIiLCJjZWxsIiwiaGFuZGxlUmVzaXplIiwiaW5kZXgiLCJjb2x1bW5zIiwibmV4dENvbHVtbnMiLCJoZWFkZXJzdGF0ZSIsInNldExpc3QiLCJuZXdMaXN0IiwiYWNjdXJhY3kiLCJmaW5pc2hfcmF0ZSIsInN0dWRlbnQiLCJzdHVkZW50X2lkIiwic3R1ZGVudF9uYW1lIiwicGhvbmUiLCJkb19xdWVzdGlvbl90aW1lIiwibGFzdF9sZWFybmVkIiwiZ2V0Rm9ybWF0ZURhdGUiLCJzcXVhZF9uYW1lIiwiaHNEYXRhIiwiZGF0YUluZGV4IiwicmVjb3JkIiwiaHJlZiIsImRlbGV0ZVJhbmtDaGFuZ2UiLCJzaG93U3F1YWQiLCJzcGxpY2UiLCJjb2wiLCJhbGlnbiIsIm9uSGVhZGVyQ2VsbCIsImNvbHVtbiIsIl90YWJsZTIiLCJib3JkZXJlZCIsImRhdGFTb3VyY2UiLCJkZWZhdWx0Q3VycmVudCIsInBhZ2VTaXplIiwidG90YWwiLCJfSnNvblRvQ1NWIiwiZXhwb3J0U3R1ZGVudExpc3QiLCJzZWxmIiwiY29ycmVjdF9wcm9iX2luZGV4IiwicmFpc2VfdmFsdWUiLCJwYXJzZUludCIsInRhYmxlX2luZm8iLCJKU29uVG9DU1YiLCJzZXREYXRhQ29udmVyIiwib2JqIiwiU2hvd0xhYmVsIiwiZm9ybWF0dGVyIiwicm93IiwiQ1NWIiwibiIsInNsaWNlIiwibSIsIlNhdmVBcyIsImNzdkRhdGEiLCJidyIsImJyb3dzZXIiLCJhbGluayIsImdldERvd25sb2FkVXJsIiwiYm9keSIsImFwcGVuZENoaWxkIiwibGlua0RvbSIsInNldEF0dHJpYnV0ZSIsImNsaWNrIiwicmVtb3ZlQ2hpbGQiLCJCbG9iIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwicyIsIlN5cyIsInVhIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwidG9Mb3dlckNhc2UiLCJlZGdlIiwibWF0Y2giLCJpZSIsImZpcmVmb3giLCJjaHJvbWUiLCJvcGVyYSIsInNhZmFyaSIsImRlZXBDb3B5T2JqZWN0Iiwic291cmNlIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwiZCIsImNvbG9ycyIsImF2Z19jb3JyZWN0Iiwid3QiLCJqb2luIiwic3Vic2VjdGlvbiIsImhzZGF0YSJdLCJtYXBwaW5ncyI6InVnQkFBQSxRQUFBQSxFQUFBLElBQ0FBLEVBQUEsTUFHQSxRQUFBQSxFQUFBLFdBQ0FBLEVBQUEsV0FDQUEsRUFBQSxXQUNBQSxFQUFBLFdBQ0FBLEVBQUEsV0FDQUEsRUFBQSxVQUNBQSxFQUFBLFdBQ0FBLEVBQUEsT0FDQUMsRUFBQUQsRUFBQSxLQUNBRSxFQUFBRixFQUFBLEtBRUFHLEVBQUFILEVBQUEsS0FDQUksRUFBQUosRUFBQSx3REFiQSxJQUFNSyxFQUFTQyxFQUFBQyxRQUFPRixPQWVoQkcsY0FDRixTQUFBQSxpR0FBY0MsQ0FBQUMsS0FBQUYsR0FBQSxJQUFBRyxtS0FBQUMsQ0FBQUYsTUFBQUYsRUFBQUssV0FBQUMsT0FBQUMsZUFBQVAsSUFBQVEsS0FBQU4sT0FBQUMsRUF3SWRNLGFBQWUsU0FBQ0MsR0FBVSxJQUFBQyxFQUNjUixFQUFLUyxNQUFuQ0MsRUFEZ0JGLEVBQ2hCRSxLQUFNQyxFQURVSCxFQUNWRyxvQkFDWixHQUFhLGFBQVRELEVBQXFCLENBQ3JCLEdBQUlDLElBQXdCSixFQUN4QixPQUVKUCxFQUFLWSxTQUFTLENBQ1ZELG9CQUFxQkosSUFFekJQLEVBQUthLGdCQUFnQk4sR0FDckJQLEVBQUtjLDBCQUEwQlAsR0FDL0JQLEVBQUtlLHVCQUF1QlIsR0FDNUJQLEVBQUtnQixNQUFNQyxVQUFTLEVBQUF4QixFQUFBeUIsZUFBY1gsTUFwSjVCUCxFQXlKZG1CLHVCQUF5QixTQUFDQyxHQUN0QnBCLEVBQUtxQixRQUFRLENBQUNDLEtBQU1GLEVBQVdHLFVBRE0sSUFBQUMsRUFFT3hCLEVBQUtTLE1BQTVDQyxFQUZnQ2MsRUFFaENk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TyxFQUFLb1AsYUFBYUMsU0FJcEMsT0FDSWpOLEVBQUFsRyxRQUFBbUcsY0FBQTJPLEVBQUE5VSxRQUFBLENBQ0krVSxVQUFBLEVBQ0FoQyxXQUFZNVMsS0FBSzRTLFdBQ2pCSyxRQUFTQSxFQUNUNEIsV0FBWXZNLEVBQUs3RixLQUNqQnBCLFlBQVltSCxHQUF1Qm5ILEVBQ25Dd0YsU0FBVUEsRUFOZFgsU0FBQSxDQUFBQyxTQUFBQyxFQUFBQyxXQUFBLDBCQVlHc00iLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICcuL2luZGV4LnNjc3MnO1xuaW1wb3J0IHsgU2VsZWN0LCBUb29sdGlwLCBTcGluLCBtZXNzYWdlIH0gZnJvbSAnYW50ZCc7XG5jb25zdCBPcHRpb24gPSBTZWxlY3QuT3B0aW9uO1xuaW1wb3J0IENoYXJ0SGVhZGVyIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQ2hhcnRIZWFkZXInO1xuaW1wb3J0IFN1YnNlY3Rpb25UYWJsZSBmcm9tICcuLi8uLi9jb21wb25lbnRzL1RhYmxlL3N1YnNlY3Rpb25UYWJsZSc7XG5pbXBvcnQgU3R1ZGVudFRhYmxlIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvVGFibGUvc3R1ZGVudFRhYmxlJztcbmltcG9ydCBTcXVhZFRhYmxlIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvVGFibGUvc3F1YWRUYWJsZSc7XG5pbXBvcnQgUmluZ0NoYXJ0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQ2hhcnQvcmluZ0NoYXJ0JztcbmltcG9ydCBoaXN0b3J5IGZyb20gJy4uLy4uL3V0aWxzL2hpc3RvcnknO1xuaW1wb3J0IFdlYWtUb3BpY3MgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9XZWFrVG9waWNzJztcbmltcG9ydCBDcnVtYiBmcm9tICcuLi8uLi9jb21wb25lbnRzL0NydW1iJztcbmltcG9ydCB7IGdldFNxdWFkSWQsIGdldERldGFpbFR5cGUsIHNlY29uZHMydGltZSwgaXNPYmplY3RFbXB0eSB9IGZyb20gJy4uLy4uL3V0aWxzL3V0aWwnO1xuaW1wb3J0IHsgZ2V0U3F1YWRIb21ld29ya3MsIGdldEhvbWV3b3JrRGV0YWlsLCBnZXRIb21ld29ya1N1YnNlY3Rpb25zLCBnZXRIb21ld29ya1N0dWRlbnQsXG4gICAgZ2V0U3F1YWRUb3RhbERldGFpbCwgZ2V0U3F1YWRTdWJzZWN0aW9uLCBnZXRTcXVhZFN0dWRlbnQgfSBmcm9tICcuLi8uLi91dGlscy91cmxNYXAnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCB7IHNldEhvbWV3b3JrSWQsIHNldFN1YmVjdGlvblBhdGggfSBmcm9tICcuLi8uLi9SZWR1eC9hY3Rpb24nO1xuXG5jbGFzcyBEZXRhaWxTdGF0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgbGV0IHBhdGggPSBoaXN0b3J5LmxvY2F0aW9uLnBhdGhuYW1lO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgcGF0aG5hbWU6IHBhdGgsXG4gICAgICAgICAgICB0eXBlOiBnZXREZXRhaWxUeXBlKHBhdGgpLFxuICAgICAgICAgICAgc3F1YWRfaWQ6IGdldFNxdWFkSWQocGF0aCksXG4gICAgICAgICAgICBob21ld29ya19saXN0OiBbXSxcbiAgICAgICAgICAgIGN1cnJlbnRfaG9tZXdvcmtfaWQ6ICcnLFxuICAgICAgICAgICAgc3Vic2VjdGlvbl9saXN0OiBudWxsLFxuICAgICAgICAgICAgc3R1ZGVudHM6IG51bGwsXG4gICAgICAgICAgICBob21ld29ya19kYXRhOiBudWxsXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgbGV0IHsgc3F1YWRfaWQsIHR5cGUgfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGlmICh0eXBlID09PSAnaG9tZXdvcmsnKSB7XG4gICAgICAgICAgICBnZXRTcXVhZEhvbWV3b3JrcyhzcXVhZF9pZCkudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzVW5tb3VudGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbGV0IGRhdGEgPSByZXMuZGF0YTtcbiAgICAgICAgICAgICAgICBpZiAoZGF0YS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBjdXJyZW50X2hvbWV3b3JrX2lkID0gdGhpcy5wcm9wcy5jdXJyZW50X2hvbWV3b3JrX2lkIHx8IGRhdGFbZGF0YS5sZW5ndGggLSAxXS5ob21ld29ya19pZDtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRIb21ld29ya0RhdGEoY3VycmVudF9ob21ld29ya19pZCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0SG9tZXdvcmtTdWJzZWN0aW9uRGF0YShjdXJyZW50X2hvbWV3b3JrX2lkKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRIb21ld29ya1N0dWRlbnREYXRhKGN1cnJlbnRfaG9tZXdvcmtfaWQpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRfaG9tZXdvcmtfaWQ6IGN1cnJlbnRfaG9tZXdvcmtfaWRcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIGhvbWV3b3JrX2xpc3Q6IGRhdGFcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZSA9PT0gJ3RvdGFsJykge1xuICAgICAgICAgICAgZ2V0U3F1YWRUb3RhbERldGFpbChzcXVhZF9pZCkudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzVW5tb3VudGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIGhvbWV3b3JrX2RhdGE6IHJlc1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgbGV0IHF1ZXN0aW9uX2luZm8gPSByZXMucXVlc3Rpb25faW5mbztcbiAgICAgICAgICAgICAgICBpZiAocXVlc3Rpb25faW5mbykge1xuICAgICAgICAgICAgICAgICAgICBxdWVzdGlvbl9pbmZvLnF1ZXN0aW9uICYmIHRoaXMucHJvcHMuZGlzcGF0Y2goc2V0U3ViZWN0aW9uUGF0aCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBib29rOiBxdWVzdGlvbl9pbmZvLnF1ZXN0aW9uLmJvb2ssXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGFwdGVyOiBxdWVzdGlvbl9pbmZvLnF1ZXN0aW9uLmNoYXB0ZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWN0aW9uOiBxdWVzdGlvbl9pbmZvLnF1ZXN0aW9uLnNlY3Rpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICBzdWJzZWN0aW9uczogcXVlc3Rpb25faW5mby5xdWVzdGlvbi5zdWJzZWN0aW9uc1xuICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wcy5kaXNwYXRjaChzZXRTdWJlY3Rpb25QYXRoKG51bGwpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuZ2V0U3F1YWRTdWJzZWN0aW9uRGF0YShzcXVhZF9pZCk7XG4gICAgICAgICAgICB0aGlzLmdldFNxdWFkU3R1ZGVudERhdGEoc3F1YWRfaWQpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgICAgdGhpcy5pc1VubW91bnRlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgZ2V0U3F1YWRTdHVkZW50RGF0YShzcXVhZF9pZCwgcGFyYW1zKSB7XG4gICAgICAgIGdldFNxdWFkU3R1ZGVudChzcXVhZF9pZCwgcGFyYW1zKS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICBpZiAodGhpcy5pc1VubW91bnRlZCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIHN0dWRlbnRzOiByZXNcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGdldFNxdWFkU3Vic2VjdGlvbkRhdGEoc3F1YWRfaWQsIHBhcmFtcykge1xuICAgICAgICBnZXRTcXVhZFN1YnNlY3Rpb24oc3F1YWRfaWQsIHBhcmFtcykudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuaXNVbm1vdW50ZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBzdWJzZWN0aW9uX2xpc3Q6IHJlc1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZ2V0SG9tZXdvcmtEYXRhKGhvbWV3b3JrX2lkKSB7XG4gICAgICAgIGdldEhvbWV3b3JrRGV0YWlsKGhvbWV3b3JrX2lkKS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICBpZiAodGhpcy5pc1VubW91bnRlZCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIGhvbWV3b3JrX2RhdGE6IHJlc1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIGxldCBxdWVzdGlvbl9pbmZvID0gcmVzLnF1ZXN0aW9uX2luZm87XG4gICAgICAgICAgICBpZiAocXVlc3Rpb25faW5mbykge1xuICAgICAgICAgICAgICAgIHF1ZXN0aW9uX2luZm8ucXVlc3Rpb24gJiYgdGhpcy5wcm9wcy5kaXNwYXRjaChzZXRTdWJlY3Rpb25QYXRoKHtcbiAgICAgICAgICAgICAgICAgICAgYm9vazogcXVlc3Rpb25faW5mby5xdWVzdGlvbi5ib29rLFxuICAgICAgICAgICAgICAgICAgICBjaGFwdGVyOiBxdWVzdGlvbl9pbmZvLnF1ZXN0aW9uLmNoYXB0ZXIsXG4gICAgICAgICAgICAgICAgICAgIHNlY3Rpb246IHF1ZXN0aW9uX2luZm8ucXVlc3Rpb24uc2VjdGlvbixcbiAgICAgICAgICAgICAgICAgICAgc3Vic2VjdGlvbnM6IHF1ZXN0aW9uX2luZm8ucXVlc3Rpb24uc3Vic2VjdGlvbnNcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuZGlzcGF0Y2goc2V0U3ViZWN0aW9uUGF0aChudWxsKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGdldEhvbWV3b3JrU3Vic2VjdGlvbkRhdGEoaG9tZXdvcmtfaWQsIHBhcmFtcykge1xuICAgICAgICBnZXRIb21ld29ya1N1YnNlY3Rpb25zKGhvbWV3b3JrX2lkLCBwYXJhbXMpLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLmlzVW5tb3VudGVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgc3Vic2VjdGlvbl9saXN0OiB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHJlcyxcbiAgICAgICAgICAgICAgICAgICAgcGFnZTogMSxcbiAgICAgICAgICAgICAgICAgICAgcGFnZV9udW06IDFcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGdldEhvbWV3b3JrU3R1ZGVudERhdGEoaG9tZXdvcmtfaWQsIHBhcmFtcykge1xuICAgICAgICBnZXRIb21ld29ya1N0dWRlbnQoaG9tZXdvcmtfaWQsIHBhcmFtcykudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuaXNVbm1vdW50ZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBzdHVkZW50czogcmVzXG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGhhbmRsZUNoYW5nZSA9ICh2YWx1ZSkgPT4ge1xuICAgICAgICBsZXQgeyB0eXBlLCBjdXJyZW50X2hvbWV3b3JrX2lkIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBpZiAodHlwZSA9PT0gJ2hvbWV3b3JrJykge1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRfaG9tZXdvcmtfaWQgPT09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgY3VycmVudF9ob21ld29ya19pZDogdmFsdWVcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB0aGlzLmdldEhvbWV3b3JrRGF0YSh2YWx1ZSk7XG4gICAgICAgICAgICB0aGlzLmdldEhvbWV3b3JrU3Vic2VjdGlvbkRhdGEodmFsdWUpO1xuICAgICAgICAgICAgdGhpcy5nZXRIb21ld29ya1N0dWRlbnREYXRhKHZhbHVlKTtcbiAgICAgICAgICAgIHRoaXMucHJvcHMuZGlzcGF0Y2goc2V0SG9tZXdvcmtJZCh2YWx1ZSkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8g5bCP6IqC5a2m5Lmg57+76aG1XG4gICAgc3Vic2VjdGlvbkxpc3RPbkNoYW5nZSA9IChwYWdpbmF0aW9uKSA9PiB7XG4gICAgICAgIHRoaXMuZ2V0RGF0YSh7cGFnZTogcGFnaW5hdGlvbi5jdXJyZW50fSk7XG4gICAgICAgIGxldCB7dHlwZSwgY3VycmVudF9ob21ld29ya19pZCwgc3F1YWRfaWR9ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgaWYgKHR5cGUgPT09ICdob21ld29yaycpIHtcbiAgICAgICAgICAgIHRoaXMuZ2V0SG9tZXdvcmtTdWJzZWN0aW9uRGF0YShjdXJyZW50X2hvbWV3b3JrX2lkLCB7cGFnZTogcGFnaW5hdGlvbi5jdXJyZW50fSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGUgPT09ICd0b3RhbCcpIHtcbiAgICAgICAgICAgIHRoaXMuZ2V0U3F1YWRTdWJzZWN0aW9uRGF0YShzcXVhZF9pZCwge3BhZ2U6IHBhZ2luYXRpb24uY3VycmVudH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIOWtpueUn+WIl+ihqOe/u+mhtVxuICAgIHN0dWRlbnRMaXN0T25DaGFuZ2UgPSAocGFnaW5hdGlvbiwgZmlsdGVyLCBzb3J0ZXIpID0+IHtcbiAgICAgICAgbGV0IHsgdHlwZSwgY3VycmVudF9ob21ld29ya19pZCwgc3F1YWRfaWQgfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGxldCBwYXJhbSA9IHtwYWdlOiBwYWdpbmF0aW9uLmN1cnJlbnR9O1xuICAgICAgICBsZXQgaXNFbXB0eSA9IGlzT2JqZWN0RW1wdHkoc29ydGVyKTtcbiAgICAgICAgaWYgKCFpc0VtcHR5ICYmIHNvcnRlci5vcmRlciA9PT0gJ2Rlc2NlbmQnKSB7XG4gICAgICAgICAgICBwYXJhbS5vcmRlcmluZyA9ICctJyArIHNvcnRlci5maWVsZDtcbiAgICAgICAgfSBlbHNlIGlmKCFpc0VtcHR5ICYmIHNvcnRlci5vcmRlciA9PT0gJ2FzY2VuZCcpIHtcbiAgICAgICAgICAgIHBhcmFtLm9yZGVyaW5nID0gc29ydGVyLmZpZWxkO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlID09PSAnaG9tZXdvcmsnKSB7XG4gICAgICAgICAgICB0aGlzLmdldEhvbWV3b3JrU3R1ZGVudERhdGEoY3VycmVudF9ob21ld29ya19pZCwgcGFyYW0pO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlID09PSAndG90YWwnKSB7XG4gICAgICAgICAgICB0aGlzLmdldFNxdWFkU3R1ZGVudERhdGEoc3F1YWRfaWQsIHBhcmFtKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGV4cG9ydEJ0bkNsaWNrID0gKCkgPT4ge1xuICAgICAgICBsZXQgeyBzdHVkZW50cyB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgaWYgKHN0dWRlbnRzICYmIHN0dWRlbnRzLmRhdGEgJiYgc3R1ZGVudHMuZGF0YS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB0aGlzLnJlZnMuc3R1ZGVudHRhYmxlLmV4cG9ydExpc3QoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG1lc3NhZ2Uud2FybmluZygn5pqC5peg5pWw5o2uLCDml6Dms5Xlr7zlh7onKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgbGV0IHsgdHlwZSwgaG9tZXdvcmtfbGlzdCwgY3VycmVudF9ob21ld29ya19pZCwgc3Vic2VjdGlvbl9saXN0LFxuICAgICAgICAgICAgICAgIHN0dWRlbnRzLCBwYXRobmFtZSwgaG9tZXdvcmtfZGF0YSwgc3F1YWRfaWR9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgICBsZXQgd2Vha190b3BpY3MgPSBbXTtcbiAgICAgICAgaWYgKGhvbWV3b3JrX2RhdGEpIHtcbiAgICAgICAgICAgIHdlYWtfdG9waWNzID0gaG9tZXdvcmtfZGF0YS53ZWFrX3RvcGljcy5tYXAoZSA9PiBlLm5hbWUpXG4gICAgICAgIH1cbiAgICAgICAgbGV0IHNxdWFkX251bSA9IHR5cGUgPT09ICdob21ld29yaydcbiAgICAgICAgICAgID8gKGhvbWV3b3JrX2RhdGEgJiYgaG9tZXdvcmtfZGF0YS50b3RhbF9ob21ld29ya19udW0pXG4gICAgICAgICAgICA6IChob21ld29ya19kYXRhICYmIGhvbWV3b3JrX2RhdGEuc3F1YWQuc3R1ZGVudF9udW0pO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2RldGFpbHN0YXQnPlxuICAgICAgICAgICAgICAgIDxDcnVtYiAvPlxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZSA9PT0gJ2hvbWV3b3JrJ1xuICAgICAgICAgICAgICAgICAgICAgICAgPyA8ZGl2IGNsYXNzTmFtZT0nZHMtc2VsZWN0Jz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8U2VsZWN0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtjdXJyZW50X2hvbWV3b3JrX2lkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93U2VhcmNoYVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17eyB3aWR0aDogMzg0LCBiYWNrZ3JvdW5kOiAnI2ZmZicsIGJvcmRlcjogJzAnIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwi6YCJ5oup5LiA5Liq5L2c5LiaXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaG9tZXdvcmtfbGlzdC5tYXAoKGUsIGkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPE9wdGlvbiB2YWx1ZT17ZS5ob21ld29ya19pZH0ga2V5PXtpfT57ZS5uYW1lfTwvT3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvU2VsZWN0PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgOiBudWxsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdkcy10b3BpbmZvJz5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdkc3QtbGVmdCBib3gnPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdkc3RsLWNoYXJ0Jz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8UmluZ0NoYXJ0IGRhdGE9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICdzc3RsLWxlZnQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnY29tcCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJfcmF0ZTogLjI4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaG9tZXdvcmtfZGF0YVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBob21ld29ya19kYXRhLnRvdGFsX2hvbWV3b3JrX251bSA9PT0gMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogaG9tZXdvcmtfZGF0YS5maW5pc2hlZF9udW0gLyBob21ld29ya19kYXRhLnRvdGFsX2hvbWV3b3JrX251bVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICl9fSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdkc3RsLWNoYXJ0Jz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8UmluZ0NoYXJ0IGRhdGE9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICdzc3RsLXJpZ2h0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2F2ZycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJfcmF0ZTogLjI4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaG9tZXdvcmtfZGF0YVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBob21ld29ya19kYXRhLnF1ZXN0aW9uX251bSA9PT0gMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogaG9tZXdvcmtfZGF0YS5jb3JyZWN0X3F1ZXN0aW9uX251bSAvIGhvbWV3b3JrX2RhdGEucXVlc3Rpb25fbnVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IDBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKX19IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdkc3QtbWlkZGxlIGJveCc+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J2RzdG0taW5mbyc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2RzdG1pLWljb24nPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzTmFtZT0nZHN0bWlpLXN2ZycgZmlsbD0nIzAwRDRCQyc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dXNlIHhsaW5rSHJlZj0nI3NxdWFkTnVtYmVyJz48L3VzZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2RzdG1pLW51bWInPntob21ld29ya19kYXRhID8gc3F1YWRfbnVtIDogMH08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZHN0bWktZGVzYyc+54+t57qn5Lq65pWwPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J2RzdG0taW5mbyc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2RzdG1pLWljb24nPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzTmFtZT0nZHN0bWlpLXN2ZycgZmlsbD0nI0ZGQUIyQic+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dXNlIHhsaW5rSHJlZj0nI3F1ZXN0aW9uQ291bnQnPjwvdXNlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZHN0bWktbnVtYic+e2hvbWV3b3JrX2RhdGEgPyAoaG9tZXdvcmtfZGF0YS5xdWVzdGlvbl9udW0gLyBzcXVhZF9udW0pLnRvRml4ZWQoMCkgOiAwfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdkc3RtaS1kZXNjJz7lubPlnYflgZrpopjmlbA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0nZHN0bS1pbmZvJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZHN0bWktaWNvbic+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3NOYW1lPSdkc3RtaWktc3ZnJyBmaWxsPScjNEQ3Q0ZFJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1c2UgeGxpbmtIcmVmPScjZHVyYXRpb24nPjwvdXNlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZHN0bWktbnVtYic+e2hvbWV3b3JrX2RhdGEgPyBzZWNvbmRzMnRpbWUoKGhvbWV3b3JrX2RhdGEudGVhY2hfdGltZSAvIHNxdWFkX251bSkudG9GaXhlZCgwKSkgOiAwfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdkc3RtaS1kZXNjJz7lubPlnYflrabkuaDml7bplb88L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J2RzdC1yaWdodCBib3gnPlxuICAgICAgICAgICAgICAgICAgICAgICAgPENoYXJ0SGVhZGVyIHRpdGxlPSfnk7bpoojnn6Xor4bngrknIGhhc01vcmUgbW9yZURlc2M9J+abtOWkmuaYk+mUmemimOebricgbW9yZUNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeS5wdXNoKHBhdGhuYW1lICsgJ1F1ZXN0aW9uRGlzcGxheS90eXBlPXNxdWFkLycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfX0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3RhYmxlLWNvbnRhaW5lciBkc3RyLXdyb25ncG9pbnQnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2Vha190b3BpY3MubGVuZ3RoID4gMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyA8V2Vha1RvcGljcyBkYXRhPXt3ZWFrX3RvcGljc30gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogPGRpdiBjbGFzc05hbWU9J2VtcHR5LXRleHQnPuaaguaXoOaVsOaNrjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2RzLXNlY3Rpb25sZWFybiBib3gnPlxuICAgICAgICAgICAgICAgICAgICA8Q2hhcnRIZWFkZXIgdGl0bGU9J+Wwj+iKguWtpuS5oCcgaGFzTW9yZT17ZmFsc2V9Lz5cbiAgICAgICAgICAgICAgICAgICAgPFNwaW4gc2l6ZT1cImxhcmdlXCIgc3Bpbm5pbmc9e3N1YnNlY3Rpb25fbGlzdCA/IGZhbHNlIDogdHJ1ZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ndGFibGUtY29udGFpbmVyJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8U3Vic2VjdGlvblRhYmxlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3Q9e3N1YnNlY3Rpb25fbGlzdH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxfaG9tZXdvcmtfbnVtPXtob21ld29ya19kYXRhID8gaG9tZXdvcmtfZGF0YS5zcXVhZC5zdHVkZW50X251bSA6IDB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLnN1YnNlY3Rpb25MaXN0T25DaGFuZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZUZpbmlzaD17dHlwZSA9PT0gJ3RvdGFsJ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9QYWdpbmF0aW9uPXt0eXBlID09PSAnaG9tZXdvcmsnfS8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9TcGluPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdib3gnPlxuICAgICAgICAgICAgICAgICAgICB7LyogPENoYXJ0SGVhZGVyIHRpdGxlPSflrabnlJ/liJfooagnIGhhc01vcmU9e2ZhbHNlfS8+ICovfVxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZHMtY2hhcnRoZWFkZXInPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdkc2MtdGl0bGUnPuWtpueUn+WIl+ihqDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlID09PSAnaG9tZXdvcmsnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gPHNwYW4gY2xhc3NOYW1lPSdkc2MtYnRuJyBvbkNsaWNrPXt0aGlzLmV4cG9ydEJ0bkNsaWNrfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3NOYW1lPSdkc2NiLWljb24nPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1c2UgeGxpbmtIcmVmPScjZXhwb3J0Jz48L3VzZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdkc2NiLXRleHQnPuWvvOWHujwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IG51bGxcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxTcGluIHNpemU9XCJsYXJnZVwiIHNwaW5uaW5nPXtzdHVkZW50cyA/IGZhbHNlIDogdHJ1ZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ndGFibGUtY29udGFpbmVyJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGUgPT09ICd0b3RhbCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gPFNxdWFkVGFibGUgbGlzdD17c3R1ZGVudHN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3F1YWRfaWQ9e3NxdWFkX2lkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lPXtwYXRobmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5zdHVkZW50TGlzdE9uQ2hhbmdlfS8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IDxTdHVkZW50VGFibGUgbGlzdD17c3R1ZGVudHN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuc3R1ZGVudExpc3RPbkNoYW5nZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRobmFtZT17cGF0aG5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlQ29ycmVjdFJhbms9e3R5cGUgPT09ICd0b3RhbCd9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmPVwic3R1ZGVudHRhYmxlXCIvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L1NwaW4+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cbn1cblxuLy8gZXhwb3J0IGRlZmF1bHQgRGV0YWlsU3RhdDtcblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gc3RhdGUgPT4gKHtcbiAgICBjdXJyZW50X3NxdWFkOiBzdGF0ZS5jdXJyZW50X3NxdWFkLFxuICAgIGN1cnJlbnRfaG9tZXdvcmtfaWQ6IHN0YXRlLmN1cnJlbnRfaG9tZXdvcmtfaWRcbn0pO1xuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMpKERldGFpbFN0YXQpO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vaW5kZXguc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9pbmRleC5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9pbmRleC5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB6cmVuZGVyIGZyb20gJ3pyZW5kZXInO1xuXG5jb25zdCBkZWZhdWx0T3B0aW9uID0ge1xuICAgIGNvbG9yOiB7XG4gICAgICAgIGNvbXA6ICcjMDBENEJDJyxcbiAgICAgICAgYXZnOiAnIzREN0NGRScsXG4gICAgICAgIHN0dUFjY3VyYWN5OiAnIzREN0NGRScsXG4gICAgICAgIHdhcm5pbmc6ICcjRkZBQjJCJ1xuICAgIH1cbn1cblxuY2xhc3MgUmluZ0NoYXJ0IHtcbiAgICBjb25zdHJ1Y3Rvcih7Y29udGFpbmVyLCB2YWx1ZSwgd2FybmluZyA9IGZhbHNlLCB0eXBlID0gJ2NvbXAnLCByX3JhdGUgPSAuMzV9KSB7XG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gICAgICAgIHRoaXMud2FybmluZyA9IHdhcm5pbmc7XG4gICAgICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgICAgIHRoaXMucl9yYXRlID0gcl9yYXRlO1xuICAgICAgICB0aGlzLnpyID0gbmV3IHpyZW5kZXIuaW5pdChjb250YWluZXIpO1xuICAgIH1cblxuICAgIGNhbGNPcHRpb24oKSB7XG4gICAgICAgIGxldCB7Y29sb3J9ID0gZGVmYXVsdE9wdGlvbjtcbiAgICAgICAgbGV0IHcgPSB0aGlzLmNvbnRhaW5lci5jbGllbnRXaWR0aDtcbiAgICAgICAgbGV0IGggPSB0aGlzLmNvbnRhaW5lci5jbGllbnRIZWlnaHQ7XG4gICAgICAgIGxldCBzaXplID0gTWF0aC5taW4odywgaCk7XG4gICAgICAgIHRoaXMuaW5uZXJPcHRpb24gPSB7XG4gICAgICAgICAgICBjeDogdyAqIC41LFxuICAgICAgICAgICAgY3k6IGggKiAuNDUsXG4gICAgICAgICAgICByOiBzaXplICogdGhpcy5yX3JhdGUsXG4gICAgICAgICAgICBzdGFydEFuZ2xlOiAtTWF0aC5QSSAqIC41LFxuICAgICAgICAgICAgbGluZVdpZHRoOiBzaXplICogLjAzLFxuICAgICAgICAgICAgZm9udFNpemU6IHNpemUgKiAuMTUsXG4gICAgICAgICAgICBiZ0NvbG9yOiAnI0Y1RjVGNScsXG4gICAgICAgICAgICB0ZXh0Q29sb3I6ICcjNjY2JyxcbiAgICAgICAgICAgIGNvbG9yOiB0aGlzLnZhbHVlIDwgLjYgPyBjb2xvci53YXJuaW5nIDogY29sb3JbdGhpcy50eXBlXSxcbiAgICAgICAgICAgIHd3OiBzaXplICogLjEsXG4gICAgICAgICAgICB3aDogc2l6ZSAqIC4xXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzZXREYXRhKHZhbHVlKSB7XG4gICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgdGhpcy56ci5jbGVhcigpO1xuICAgICAgICB0aGlzLnJlbmRlcigpO1xuICAgIH1cblxuICAgIGdldENpcmNsZSh7Y3gsIGN5LCByLCBjb2xvcn0pIHtcbiAgICAgICAgcmV0dXJuIG5ldyB6cmVuZGVyLkNpcmNsZSh7XG4gICAgICAgICAgICBzaGFwZToge1xuICAgICAgICAgICAgICAgIGN4OiBjeCxcbiAgICAgICAgICAgICAgICBjeTogY3ksXG4gICAgICAgICAgICAgICAgcjogclxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgZmlsbDogY29sb3JcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8g6aKE6K2mXG4gICAgZ2V0V2FybmluZ1NoYXBlKHt4LCB5LCB3LCBoLCBjb2xvciA9ICcjMDBENEJDJ30pIHtcbiAgICAgICAgbGV0IHdhcm5pbmcgPSBuZXcgenJlbmRlci5QYXRoLmV4dGVuZCh7XG4gICAgICAgICAgICBzaGFwZToge1xuICAgICAgICAgICAgICAgIHc6IDAsXG4gICAgICAgICAgICAgICAgaDogMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJ1aWxkUGF0aDogKHBhdGgsIHNoYXBlKSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IHcgPSBzaGFwZS53LCBoID0gc2hhcGUuaDtcbiAgICAgICAgICAgICAgICBsZXQgY3ggPSB3ICogLjUsIGN5ID0gaCAqIC41O1xuICAgICAgICAgICAgICAgIGxldCBsciA9IDI7XG4gICAgICAgICAgICAgICAgbGV0IGV4Y2xhbWF0aW9uTGVuZ3RoID0gaCAqIC43O1xuICAgICAgICAgICAgICAgIHBhdGguZmlsbENvbG9yID0gJ3JlZCc7XG4gICAgICAgICAgICAgICAgcGF0aC5tb3ZlVG8oMCwgY3kpLFxuICAgICAgICAgICAgICAgIHBhdGguYmV6aWVyQ3VydmVUbygwLCBjeSAqIC44LCBjeCAqIC4yLCAwLCBjeCwgMCk7XG4gICAgICAgICAgICAgICAgcGF0aC5iZXppZXJDdXJ2ZVRvKHcgLSBjeCAqIC4yLCAwLCB3LCBjeSAqIC44LCB3LCBjeSk7XG4gICAgICAgICAgICAgICAgcGF0aC5saW5lVG8odywgaCAtIGxyICogMik7XG4gICAgICAgICAgICAgICAgcGF0aC5hcmModywgaCAtIGxyLCBsciwgLU1hdGguUEkgKiAuNSwgTWF0aC5QSSAqIC41KTtcbiAgICAgICAgICAgICAgICBwYXRoLmxpbmVUbygwLCBoKTtcbiAgICAgICAgICAgICAgICBwYXRoLmFyYygwLCBoIC0gbHIsIGxyLCBNYXRoLlBJICogLjUsIE1hdGguUEkgKiAxLjUpO1xuICAgICAgICAgICAgICAgIHBhdGguZmlsbENvbG9yID0gJ3RyYW5zcGFyZW50JztcbiAgICAgICAgICAgICAgICBwYXRoLm1vdmVUbyhjeCAtIGxyLCBjeSAtIGV4Y2xhbWF0aW9uTGVuZ3RoICogLjUpO1xuICAgICAgICAgICAgICAgIHBhdGguYXJjKGN4LCBjeSAtIGV4Y2xhbWF0aW9uTGVuZ3RoICogLjUsIGxyLCAtTWF0aC5QSSwgMCk7XG4gICAgICAgICAgICAgICAgcGF0aC5jbG9zZVBhdGgoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgbGV0IGV4Y2xhbWF0aW9uID0gbmV3IHpyZW5kZXIuUGF0aC5leHRlbmQoe1xuICAgICAgICAgICAgc2hhcGU6IHtcbiAgICAgICAgICAgICAgICB3OiAwLFxuICAgICAgICAgICAgICAgIGg6IDBcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBidWlsZFBhdGg6IChwYXRoLCBzaGFwZSkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCB3ID0gc2hhcGUudywgaCA9IHNoYXBlLmg7XG4gICAgICAgICAgICAgICAgbGV0IGN4ID0gdyAqIC41LCBjeSA9IGggKiAuNTtcbiAgICAgICAgICAgICAgICBsZXQgbHIgPSAxLjY7XG4gICAgICAgICAgICAgICAgbGV0IGV4Y2xhbWF0aW9uTGVuZ3RoID0gaCAqIC4yNSAqIC41O1xuICAgICAgICAgICAgICAgIHBhdGgubW92ZVRvKGN4IC0gbHIsIGN5IC0gZXhjbGFtYXRpb25MZW5ndGgpO1xuICAgICAgICAgICAgICAgIHBhdGguYXJjKGN4LCBjeSAtIGV4Y2xhbWF0aW9uTGVuZ3RoLCBsciwgLU1hdGguUEksIDApO1xuICAgICAgICAgICAgICAgIHBhdGgubGluZVRvKGN4ICsgbHIsIGN5ICsgZXhjbGFtYXRpb25MZW5ndGgpO1xuICAgICAgICAgICAgICAgIHBhdGguYXJjKGN4LCBjeSArIGV4Y2xhbWF0aW9uTGVuZ3RoLCBsciwgMCwgTWF0aC5QSSk7XG4gICAgICAgICAgICAgICAgcGF0aC5tb3ZlVG8oY3gsIGN5ICsgZXhjbGFtYXRpb25MZW5ndGggKyBsciAqIDMpO1xuICAgICAgICAgICAgICAgIHBhdGguYXJjKGN4LCBjeSArIGV4Y2xhbWF0aW9uTGVuZ3RoICsgbHIgKiAzLCBsciwgMCwgTWF0aC5QSSAqIDIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBsZXQgZyA9IG5ldyB6cmVuZGVyLkdyb3VwKHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBbeCwgeV0sXG4gICAgICAgICAgICBzaGFwZToge1xuICAgICAgICAgICAgICAgIHc6IHcsXG4gICAgICAgICAgICAgICAgaDogaFxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgbGV0IHduID0gbmV3IHdhcm5pbmcoe1xuICAgICAgICAgICAgc2hhcGU6IHtcbiAgICAgICAgICAgICAgICB3OiB3LFxuICAgICAgICAgICAgICAgIGg6IGhcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICAgIGZpbGw6IGNvbG9yXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBnLmFkZCh3bik7XG4gICAgICAgIGxldCBleCA9IG5ldyBleGNsYW1hdGlvbih7XG4gICAgICAgICAgICBwb3NpdGlvbjogWzAsIC0gMl0sXG4gICAgICAgICAgICBzaGFwZToge1xuICAgICAgICAgICAgICAgIHc6IHcsXG4gICAgICAgICAgICAgICAgaDogaFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgZmlsbDogJyNmZmYnXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBnLmFkZChleCk7XG4gICAgICAgIHJldHVybiBnO1xuICAgIH1cblxuICAgIGdldEFyYyh7Y3gsIGN5LCByLCBzdGFydEFuZ2xlLCBlbmRBbmdsZSwgbGluZVdpZHRoLCBjb2xvcn0pIHtcbiAgICAgICAgbGV0IHN0YXJ0Q2lyY2xlID0gdGhpcy5nZXRDaXJjbGUoe1xuICAgICAgICAgICAgY3g6IGN4ICsgciAqIE1hdGguY29zKHN0YXJ0QW5nbGUpLFxuICAgICAgICAgICAgY3k6IGN5ICsgciAqIE1hdGguc2luKHN0YXJ0QW5nbGUpLFxuICAgICAgICAgICAgcjogbGluZVdpZHRoICogLjUsXG4gICAgICAgICAgICBjb2xvcjogY29sb3JcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbGV0IGFyYyA9IG5ldyB6cmVuZGVyLkFyYyh7XG4gICAgICAgICAgICBzaGFwZToge1xuICAgICAgICAgICAgICAgIGN4OiBjeCxcbiAgICAgICAgICAgICAgICBjeTogY3ksXG4gICAgICAgICAgICAgICAgcjogcixcbiAgICAgICAgICAgICAgICBzdGFydEFuZ2xlOiBzdGFydEFuZ2xlLFxuICAgICAgICAgICAgICAgIGVuZEFuZ2xlOiBzdGFydEFuZ2xlLFxuICAgICAgICAgICAgICAgIGNsb2Nrd2lzZTogdHJ1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgc3Ryb2tlOiBjb2xvcixcbiAgICAgICAgICAgICAgICBsaW5lV2lkdGg6IGxpbmVXaWR0aFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNpbGVudDogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgICAgYXJjLmFuaW1hdGVUbyh7XG4gICAgICAgICAgICBzaGFwZToge1xuICAgICAgICAgICAgICAgIGVuZEFuZ2xlOiBlbmRBbmdsZVxuICAgICAgICAgICAgfVxuICAgICAgICB9LCAxMDAwLCAnZXhwb25lbnRpYWxJbk91dCcpO1xuXG4gICAgICAgIGxldCBlY3ggPSBjeCArIHIgKiBNYXRoLmNvcyhlbmRBbmdsZSk7XG4gICAgICAgIGxldCBlY3kgPSBjeSArIHIgKiBNYXRoLnNpbihlbmRBbmdsZSk7XG4gICAgICAgIGxldCBlbmRDaXJjbGUgPSB0aGlzLmdldENpcmNsZSh7XG4gICAgICAgICAgICBjeDogZWN4LFxuICAgICAgICAgICAgY3k6IGVjeSxcbiAgICAgICAgICAgIHI6IGxpbmVXaWR0aCAqIC41LFxuICAgICAgICAgICAgY29sb3I6IGNvbG9yXG4gICAgICAgIH0pO1xuICAgICAgICBlbmRDaXJjbGUuc2NhbGUgPSBbMCwgMF07XG4gICAgICAgIGVuZENpcmNsZS5vcmlnaW4gPSBbZWN4LCBlY3ldO1xuICAgICAgICBlbmRDaXJjbGUuYW5pbWF0ZVRvKHtcbiAgICAgICAgICAgIHNjYWxlOiBbMSwgMV1cbiAgICAgICAgfSwgNTAsIDkwMCk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGFydENpcmNsZSxcbiAgICAgICAgICAgIGFyYyxcbiAgICAgICAgICAgIGVuZENpcmNsZVxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGdlbmVyYXRlQ2hhcnQoKSB7XG4gICAgICAgIGxldCB7IGN4LCBjeSwgciwgYmdDb2xvciwgY29sb3IsIGxpbmVXaWR0aCwgZm9udFNpemUsIHRleHRDb2xvciwgc3RhcnRBbmdsZSwgd3csIHdofSA9IHRoaXMuaW5uZXJPcHRpb247XG4gICAgICAgIGxldCB2YWx1ZSA9IHRoaXMudmFsdWU7XG4gICAgICAgIGxldCB0eXBlID0gdGhpcy50eXBlO1xuICAgICAgICB0aGlzLmJnUmluZyA9IG5ldyB6cmVuZGVyLkFyYyh7XG4gICAgICAgICAgICBzaGFwZToge1xuICAgICAgICAgICAgICAgIGN4OiBjeCxcbiAgICAgICAgICAgICAgICBjeTogY3ksXG4gICAgICAgICAgICAgICAgcjogcixcbiAgICAgICAgICAgICAgICBzdGFydEFuZ2xlOiAwLFxuICAgICAgICAgICAgICAgIGVuZEFuZ2xlOiBNYXRoLlBJICogMixcbiAgICAgICAgICAgICAgICBjbG9ja3dpc2U6IHRydWVcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICAgIHN0cm9rZTogYmdDb2xvcixcbiAgICAgICAgICAgICAgICBsaW5lV2lkdGg6IGxpbmVXaWR0aCxcbiAgICAgICAgICAgICAgICB0ZXh0RmlsbDogY29sb3IsXG4gICAgICAgICAgICAgICAgdGV4dDogKHZhbHVlICogMTAwKS50b0ZpeGVkKDApICsgJyUnLFxuICAgICAgICAgICAgICAgIGZvbnRTaXplOiBmb250U2l6ZSxcbiAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiA1MDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuenIuYWRkKHRoaXMuYmdSaW5nKTtcbiAgICAgICAgdGhpcy5hcmMgPSB0aGlzLmdldEFyYyh7XG4gICAgICAgICAgICBjeDogY3gsXG4gICAgICAgICAgICBjeTogY3ksXG4gICAgICAgICAgICByOiByLFxuICAgICAgICAgICAgc3RhcnRBbmdsZTogc3RhcnRBbmdsZSxcbiAgICAgICAgICAgIGVuZEFuZ2xlOiBzdGFydEFuZ2xlICsgIE1hdGguUEkgKiAyICogdmFsdWUsXG4gICAgICAgICAgICBsaW5lV2lkdGg6IGxpbmVXaWR0aCxcbiAgICAgICAgICAgIGNvbG9yOiBjb2xvclxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy56ci5hZGQodGhpcy5hcmMuc3RhcnRDaXJjbGUpO1xuICAgICAgICB0aGlzLnpyLmFkZCh0aGlzLmFyYy5hcmMpO1xuICAgICAgICB0aGlzLnpyLmFkZCh0aGlzLmFyYy5lbmRDaXJjbGUpO1xuXG4gICAgICAgIGlmICh2YWx1ZSA8IC42KSB7XG4gICAgICAgICAgICB0aGlzLndhcm5pbmcgPSB0aGlzLmdldFdhcm5pbmdTaGFwZSh7XG4gICAgICAgICAgICAgICAgeDogY3ggLSB3dyAqIC41LCB5OiBjeSArIGZvbnRTaXplICogLjcsXG4gICAgICAgICAgICAgICAgdzogd3csIGg6IHdoLFxuICAgICAgICAgICAgICAgIGNvbG9yOiBkZWZhdWx0T3B0aW9uLmNvbG9yLndhcm5pbmdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy56ci5hZGQodGhpcy53YXJuaW5nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCB0ID0gJyc7XG4gICAgICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICAgICAgY2FzZSAnY29tcCc6XG4gICAgICAgICAgICAgICAgdCA9ICfkvZzkuJrlrozmiJDnjocnO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnYXZnJzpcbiAgICAgICAgICAgICAgICB0ID0gJ+W5s+Wdh+ato+ehrueOhyc7XG4gICAgICAgICAgICAgICAgYnJlYWs7c3R1QWNjdXJhY3lcbiAgICAgICAgICAgIGNhc2UgJ3N0dUFjY3VyYWN5JzpcbiAgICAgICAgICAgICAgICB0ID0gJ+WtpueUn+ato+ehrueOhyc7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICd3YXJuaW5nJzpcbiAgICAgICAgICAgICAgICB0ID0gJ+ePree6p+ato+ehrueOhyc7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudGl0bGUgPSBuZXcgenJlbmRlci5UZXh0KHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBbY3gsIGN5ICsgciAqIDEuNF0sXG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICAgIHRleHQ6IHQsXG4gICAgICAgICAgICAgICAgdGV4dEZpbGw6IHRleHRDb2xvcixcbiAgICAgICAgICAgICAgICBmb250U2l6ZTogd3cgKiAuOSxcbiAgICAgICAgICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnpyLmFkZCh0aGlzLnRpdGxlKTtcbiAgICB9XG5cbiAgICByZXNpemUgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuenIucmVzaXplKCk7XG4gICAgICAgIHRoaXMuY2FsY09wdGlvbigpO1xuICAgICAgICBsZXQgeyBjeCwgY3ksIHIsIHN0YXJ0QW5nbGUsIGxpbmVXaWR0aCwgZm9udFNpemUsIHd3LCB3aH0gPSB0aGlzLmlubmVyT3B0aW9uO1xuICAgICAgICBsZXQgdmFsdWUgPSB0aGlzLnZhbHVlO1xuICAgICAgICB0aGlzLmJnUmluZy5zdHlsZS50ZXh0ID0gKHZhbHVlICogMTAwKS50b0ZpeGVkKDApICsgJyUnO1xuICAgICAgICB0aGlzLmJnUmluZy5hbmltYXRlVG8oe1xuICAgICAgICAgICAgc2hhcGU6IHtcbiAgICAgICAgICAgICAgICBjeDogY3gsXG4gICAgICAgICAgICAgICAgY3k6IGN5LFxuICAgICAgICAgICAgICAgIHI6IHJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICAgIGxpbmVXaWR0aDogbGluZVdpZHRoLFxuICAgICAgICAgICAgICAgIGZvbnRTaXplOiBmb250U2l6ZVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5hcmMuc3RhcnRDaXJjbGUuYW5pbWF0ZVRvKHtcbiAgICAgICAgICAgIHNoYXBlOiB7XG4gICAgICAgICAgICAgICAgY3g6IGN4ICsgciAqIE1hdGguY29zKHN0YXJ0QW5nbGUpLFxuICAgICAgICAgICAgICAgIGN5OiBjeSArIHIgKiBNYXRoLnNpbihzdGFydEFuZ2xlKSxcbiAgICAgICAgICAgICAgICByOiBsaW5lV2lkdGggKiAuNSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuYXJjLmFyYy5hbmltYXRlVG8oe1xuICAgICAgICAgICAgc2hhcGU6IHtcbiAgICAgICAgICAgICAgICBjeDogY3gsXG4gICAgICAgICAgICAgICAgY3k6IGN5LFxuICAgICAgICAgICAgICAgIHI6IHJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICAgIGxpbmVXaWR0aDogbGluZVdpZHRoXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGxldCBlbmRBbmdsZSA9IHN0YXJ0QW5nbGUgKyAgTWF0aC5QSSAqIDIgKiB2YWx1ZVxuICAgICAgICBsZXQgZWN4ID0gY3ggKyByICogTWF0aC5jb3MoZW5kQW5nbGUpO1xuICAgICAgICBsZXQgZWN5ID0gY3kgKyByICogTWF0aC5zaW4oZW5kQW5nbGUpO1xuICAgICAgICB0aGlzLmFyYy5lbmRDaXJjbGUuYW5pbWF0ZVRvKHtcbiAgICAgICAgICAgIHNoYXBlOiB7XG4gICAgICAgICAgICAgICAgY3g6IGVjeCxcbiAgICAgICAgICAgICAgICBjeTogZWN5LFxuICAgICAgICAgICAgICAgIHI6IGxpbmVXaWR0aCAqIC41LFxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy50aXRsZS5hbmltYXRlVG8oe1xuICAgICAgICAgICAgcG9zaXRpb246IFtjeCwgY3kgKyByICogMS40XSxcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgZm9udFNpemU6IHd3ICogLjlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKHRoaXMud2FybmluZykge1xuICAgICAgICAgICAgdGhpcy53YXJuaW5nLmFuaW1hdGVUbyh7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IFtjeCAtIHd3ICogLjUsIGN5ICsgZm9udFNpemUgKiAuN11cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy53YXJuaW5nLl9jaGlsZHJlbi5mb3JFYWNoKGUgPT4ge1xuICAgICAgICAgICAgICAgIGUuYW5pbWF0ZVRvKHtcbiAgICAgICAgICAgICAgICAgICAgc2hhcGU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHc6IHd3LFxuICAgICAgICAgICAgICAgICAgICAgICAgaDogd2hcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHRoaXMuY2FsY09wdGlvbigpO1xuICAgICAgICB0aGlzLmdlbmVyYXRlQ2hhcnQoKTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMucmVzaXplKTtcbiAgICB9XG5cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLnpyLmRpc3Bvc2UoKTtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMucmVzaXplKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJpbmcgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIHByZVZhbHVlOiAwLFxuICAgICAgICAgICAgY29udGFpbmVyOiBudWxsLFxuICAgICAgICAgICAgY2hhcnQ6IG51bGxcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICBsZXQgeyBpZCwgdHlwZSwgcl9yYXRlLCB2YWx1ZSB9ID0gdGhpcy5wcm9wcy5kYXRhO1xuICAgICAgICBsZXQgY2hhcnQgPSBuZXcgUmluZ0NoYXJ0KHtcbiAgICAgICAgICAgIGNvbnRhaW5lcjogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpLFxuICAgICAgICAgICAgdmFsdWU6IHZhbHVlID8gdmFsdWUgOiAwLFxuICAgICAgICAgICAgdHlwZTogdHlwZSxcbiAgICAgICAgICAgIHJfcmF0ZTogcl9yYXRlXG4gICAgICAgIH0pO1xuICAgICAgICBjaGFydC5yZW5kZXIoKTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBjaGFydDogY2hhcnRcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgICBpZiAoIW5leHRQcm9wcy5kYXRhKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHsgcHJlVmFsdWUsIGNoYXJ0IH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBsZXQgeyBpZCwgdHlwZSwgcl9yYXRlLCB2YWx1ZSB9ID0gbmV4dFByb3BzLmRhdGE7XG4gICAgICAgIGlmIChwcmVWYWx1ZSA9PT0gdmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNoYXJ0ICYmIGNoYXJ0LnNldERhdGEodmFsdWUpO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHByZVZhbHVlOiB2YWx1ZVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgICAgbGV0IHsgY2hhcnQgfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGlmIChjaGFydCkge1xuICAgICAgICAgICAgY2hhcnQuZGlzcG9zZSgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgeyBpZCB9ID0gdGhpcy5wcm9wcy5kYXRhO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBpZD17aWR9IHN0eWxlPXt7d2lkdGg6ICcxMDAlJywgaGVpZ2h0OiAnMTAwJSd9fT48L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cbn1cbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4vaW5kZXguc2Nzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENoYXJ0SGVhZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBoYW5kbGVDbGljayA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5wcm9wcy5tb3JlQ2xpY2soKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQge3RpdGxlLCBoYXNNb3JlLCBtb3JlRGVzYywgbGVnZW5kb25lLCBsZWdlbmR0d28sIGxlZ2VuZHRocmVlLCBzaW5nbGVMaW5lLCBsaW5lVHlwZX0gPSB0aGlzLnByb3BzO1xuICAgICAgICBsZXQgbGluZVN0eWxlID0gJ3NpbmdsZUxpbmUgJyArIChsaW5lVHlwZSA9PT0gJ2dyZWVuJyA/ICdncmVlbicgOiBsaW5lVHlwZSA9PT0gJ2JsdWUnID8gJ2JsdWUnIDogJ3llbGxvdycpO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2NoYXJ0LWhlYWRlcic+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXtzaW5nbGVMaW5lID8gJ3RpdGxlIG1vcmVPYnZpb3VzJyA6ICd0aXRsZSd9PlxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzaW5nbGVMaW5lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyA8c3BhbiBjbGFzc05hbWU9e2xpbmVTdHlsZX0+PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogbnVsbFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHt0aXRsZX1cbiAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBoYXNNb3JlID09PSBmYWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgPyA8c3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZ2VuZG9uZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyA8c3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J2xlZ2VuZG9uZSc+PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17bGVnZW5kdHdvID8gJ3RleHQgbWFyZ2lucmlnaHQnIDogJ3RleHQnfT57bGVnZW5kb25lfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBudWxsXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWdlbmR0d29cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gPHNwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdsZWdlbmR0d28nPjwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e2xlZ2VuZHRocmVlID8gJ3RleHQgbWFyZ2lucmlnaHQnIDogJ3RleHQnfT57bGVnZW5kdHdvfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBudWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVnZW5kdGhyZWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gPHNwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdsZWdlbmR0aHJlZSc+PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0ndGV4dCc+e2xlZ2VuZHRocmVlfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBudWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgOiA8c3BhbiBjbGFzc05hbWU9J21vcmUnIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVDbGljaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0ndGV4dCc+e21vcmVEZXNjfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzTmFtZT0naWNvbic+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1c2UgeGxpbmtIcmVmPScjY29ybmVyJz48L3VzZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cbn1cbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2luZGV4LnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vaW5kZXguc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vaW5kZXguc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNoYXJ0LWhlYWRlciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIHBhZGRpbmc6IDAgMS4zOXZ3O1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDR2dztcXG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZjVmNWY1OyB9XFxuICAuY2hhcnQtaGVhZGVyIC50aXRsZSB7XFxuICAgIGNvbG9yOiAjNjY2O1xcbiAgICBmb250LXNpemU6IDEuMTF2dztcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxcbiAgICAuY2hhcnQtaGVhZGVyIC50aXRsZSAuc2luZ2xlTGluZSB7XFxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgICAgIHdpZHRoOiA0cHg7XFxuICAgICAgaGVpZ2h0OiAxLjM5dnc7XFxuICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xcbiAgICAgIG1hcmdpbi1yaWdodDogLjgzdnc7IH1cXG4gICAgLmNoYXJ0LWhlYWRlciAudGl0bGUgLmdyZWVuIHtcXG4gICAgICBiYWNrZ3JvdW5kOiAjMDBkNGJjOyB9XFxuICAgIC5jaGFydC1oZWFkZXIgLnRpdGxlIC5ibHVlIHtcXG4gICAgICBiYWNrZ3JvdW5kOiAjNEQ3Q0ZFOyB9XFxuICAgIC5jaGFydC1oZWFkZXIgLnRpdGxlIC55ZWxsb3cge1xcbiAgICAgIGJhY2tncm91bmQ6ICNGRkFCMkI7IH1cXG4gIC5jaGFydC1oZWFkZXIgLm1vcmVPYnZpb3VzIHtcXG4gICAgY29sb3I6ICMyNTI1MjU7XFxuICAgIGZvbnQtc2l6ZTogMS4yNXZ3OyB9XFxuICAuY2hhcnQtaGVhZGVyIC5sZWdlbmRvbmUsIC5jaGFydC1oZWFkZXIgLmxlZ2VuZHR3bywgLmNoYXJ0LWhlYWRlciAubGVnZW5kdGhyZWUge1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICAgIHdpZHRoOiAuNjl2dztcXG4gICAgaGVpZ2h0OiAuNjl2dztcXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgICBtYXJnaW4tcmlnaHQ6IC42OXZ3OyB9XFxuICAuY2hhcnQtaGVhZGVyIC5sZWdlbmRvbmUge1xcbiAgICBiYWNrZ3JvdW5kOiAjMDBkNGJjOyB9XFxuICAuY2hhcnQtaGVhZGVyIC5sZWdlbmR0d28ge1xcbiAgICBiYWNrZ3JvdW5kOiAjNEQ3Q0ZFOyB9XFxuICAuY2hhcnQtaGVhZGVyIC5sZWdlbmR0aHJlZSB7XFxuICAgIGJhY2tncm91bmQ6ICNGRkFCMkI7IH1cXG4gIC5jaGFydC1oZWFkZXIgLnRleHQge1xcbiAgICBmb250LXdlaWdodDogNTAwO1xcbiAgICBmb250LXNpemU6IC44M3Z3O1xcbiAgICBjb2xvcjogI2IzYjNiMzsgfVxcbiAgLmNoYXJ0LWhlYWRlciAubWFyZ2lucmlnaHQge1xcbiAgICBtYXJnaW4tcmlnaHQ6IDJ2dzsgfVxcbiAgLmNoYXJ0LWhlYWRlciAubW9yZSB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxcbiAgICAuY2hhcnQtaGVhZGVyIC5tb3JlIC50ZXh0IHtcXG4gICAgICBmb250LXNpemU6IC45N3Z3O1xcbiAgICAgIGNvbG9yOiAjMDBkNGJjO1xcbiAgICAgIG1hcmdpbi1yaWdodDogLjk3dnc7XFxuICAgICAgdHJhbnNpdGlvbjogYWxsIC41czsgfVxcbiAgICAuY2hhcnQtaGVhZGVyIC5tb3JlIC5pY29uIHtcXG4gICAgICB3aWR0aDogLjQ5dnc7XFxuICAgICAgaGVpZ2h0OiAuODN2dztcXG4gICAgICBmaWxsOiAjMDBkNGJjOyB9XFxuICAuY2hhcnQtaGVhZGVyIC5tb3JlOmhvdmVyIC50ZXh0IHtcXG4gICAgY29sb3I6ICMyM2UwY2E7IH1cXG4gIC5jaGFydC1oZWFkZXIgLm1vcmU6aG92ZXIgLmljb24ge1xcbiAgICBmaWxsOiAjMjNlMGNhOyB9XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIjY29tcG9uZW50cy10YWJsZS1kZW1vLXJlc2l6YWJsZS1jb2x1bW4gLnJlYWN0LXJlc2l6YWJsZSB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cXG5cXG4jY29tcG9uZW50cy10YWJsZS1kZW1vLXJlc2l6YWJsZS1jb2x1bW4gLnJlYWN0LXJlc2l6YWJsZS1oYW5kbGUge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgd2lkdGg6IC42OXZ3O1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYm90dG9tOiAwO1xcbiAgcmlnaHQ6IC0uMzV2dztcXG4gIGN1cnNvcjogY29sLXJlc2l6ZTsgfVxcblxcbi5maXJzdENlbGwge1xcbiAgY29sb3I6ICM2NjY7IH1cXG5cXG4udGFibGVHcmF5IHtcXG4gIGNvbG9yOiAjOTk5OyB9XFxuXFxuLnRhYmxlR3JlZW4ge1xcbiAgY29sb3I6ICMwMEQ0QkM7IH1cXG5cXG4udGFibGVSZWQge1xcbiAgY29sb3I6ICNGMTNBMzA7IH1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICcuL2luZGV4LnNjc3MnO1xuaW1wb3J0IHsgQnJlYWRjcnVtYiB9IGZyb20gJ2FudGQnO1xuaW1wb3J0IGhpc3RvcnkgZnJvbSAnLi4vLi4vdXRpbHMvaGlzdG9yeSc7XG5pbXBvcnQgeyBnZXRTcXVhZElkLCBnZXREZXRhaWxUeXBlLCBnZXRTdHVkZW50SWQsIGdldFF1ZXN0aW9uVHlwZSB9IGZyb20gJy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5jbGFzcyBDdXJtYiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICByb3V0ZXM6IHRoaXMuZ2V0Um91dGVzKClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGdldEZpcnN0Q3J1bWIocGF0aCkge1xuICAgICAgICBpZiAoL15cXC9TcXVhZFN0YXQvLnRlc3QocGF0aCkpIHtcbiAgICAgICAgICAgIGxldCBzcXVhZF9pZCA9IGdldFNxdWFkSWQocGF0aCk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHBhdGg6IGAvU3F1YWRTdGF0L3NxdWFkX2lkPSR7c3F1YWRfaWR9L2AsXG4gICAgICAgICAgICAgICAgYnJlYWRjcnVtYk5hbWU6ICfnj63nuqfor6bmg4UnXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoL15cXC9TdHVkZW50TWFuYWdlLy50ZXN0KHBhdGgpKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHBhdGg6ICcvU3R1ZGVudE1hbmFnZS8nLFxuICAgICAgICAgICAgICAgIGJyZWFkY3J1bWJOYW1lOiAn5a2m55Sf566h55CGJ1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKC9eXFwvQXNzaWduSG9tZXdvcmsvLnRlc3QocGF0aCkpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgcGF0aDogJy9Bc3NpZ25Ib21ld29yay8nLFxuICAgICAgICAgICAgICAgIGJyZWFkY3J1bWJOYW1lOiAn5biD572u5L2c5LiaJ1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBwYXRoOiAnLycsXG4gICAgICAgICAgICAgICAgYnJlYWRjcnVtYk5hbWU6ICfmnIDov5HkvZzkuJonXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZXRTZWNvbmRDcnVtYihwYXRoKSB7XG4gICAgICAgIGlmICgvRGV0YWlsU3RhdC8udGVzdChwYXRoKSkge1xuICAgICAgICAgICAgbGV0IHR5cGUgPSBnZXREZXRhaWxUeXBlKHBhdGgpO1xuICAgICAgICAgICAgbGV0IG5hbWUgPSB0eXBlID09PSAnaG9tZXdvcmsnID8gJ+S9nOS4muivpuaDhScgOiAn5pW05L2T5a2m5oOFJztcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgcGF0aDogYC9EZXRhaWxTdGF0L3R5cGU9JHt0eXBlfS9gLFxuICAgICAgICAgICAgICAgIGJyZWFkY3J1bWJOYW1lOiBuYW1lXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKC9TdHVkZW50U3RhdC8udGVzdChwYXRoKSkge1xuICAgICAgICAgICAgbGV0IHN0dWRlbnRfaWQgPSBnZXRTdHVkZW50SWQocGF0aCk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHBhdGg6IGAvU3R1ZGVudFN0YXQvc3R1ZGVudF9pZD0ke3N0dWRlbnRfaWR9L2AsXG4gICAgICAgICAgICAgICAgYnJlYWRjcnVtYk5hbWU6ICflrabnlJ/or6bmg4UnXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKC9RdWVzdGlvbkRpc3BsYXkvLnRlc3QocGF0aCkpIHtcbiAgICAgICAgICAgIGxldCB0eXBlID0gZ2V0UXVlc3Rpb25UeXBlKHBhdGgpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBwYXRoOiBgL1F1ZXN0aW9uRGlzcGxheS90eXBlPSR7dHlwZX0vYCxcbiAgICAgICAgICAgICAgICBicmVhZGNydW1iTmFtZTogJ+aYk+mUmemimOebridcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBnZXRUaGlyZENydW1iKHBhdGgsIHNlY29uZCkge1xuICAgICAgICBpZiAoc2Vjb25kICYmICEoL1N0dWRlbnRTdGF0Ly50ZXN0KHNlY29uZC5wYXRoKSkgJiYgL1N0dWRlbnRTdGF0Ly50ZXN0KHBhdGgpKSB7XG4gICAgICAgICAgICBsZXQgc3R1ZGVudF9pZCA9IGdldFN0dWRlbnRJZChwYXRoKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgcGF0aDogYC9TdHVkZW50U3RhdC9zdHVkZW50X2lkPSR7c3R1ZGVudF9pZH0vYCxcbiAgICAgICAgICAgICAgICBicmVhZGNydW1iTmFtZTogJ+WtpueUn+ivpuaDhSdcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoc2Vjb25kICYmICEoL1F1ZXN0aW9uRGlzcGxheS8udGVzdChzZWNvbmQucGF0aCkpICYmIC9RdWVzdGlvbkRpc3BsYXkvLnRlc3QocGF0aCkpIHtcbiAgICAgICAgICAgIGxldCB0eXBlID0gZ2V0UXVlc3Rpb25UeXBlKHBhdGgpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBwYXRoOiBgL1F1ZXN0aW9uRGlzcGxheS90eXBlPSR7dHlwZX0vYCxcbiAgICAgICAgICAgICAgICBicmVhZGNydW1iTmFtZTogJ+aYk+mUmemimOebridcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBnZXRGb3VydGhDcnVtYihwYXRoLCB0aGlyZCkge1xuICAgICAgICBpZiAodGhpcmQgJiYgISgvUXVlc3Rpb25EaXNwbGF5Ly50ZXN0KHRoaXJkLnBhdGgpKSAmJiAvUXVlc3Rpb25EaXNwbGF5Ly50ZXN0KHBhdGgpKSB7XG4gICAgICAgICAgICBsZXQgdHlwZSA9IGdldFF1ZXN0aW9uVHlwZShwYXRoKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgcGF0aDogYC9RdWVzdGlvbkRpc3BsYXkvdHlwZT0ke3R5cGV9L2AsXG4gICAgICAgICAgICAgICAgYnJlYWRjcnVtYk5hbWU6ICfmmJPplJnpopjnm64nXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgZ2V0Um91dGVzKCkge1xuICAgICAgICBsZXQgcm91dGVzID0gW107XG4gICAgICAgIGxldCBwYXRoID0gaGlzdG9yeS5sb2NhdGlvbi5wYXRobmFtZTtcbiAgICAgICAgbGV0IGZpcnN0ID0gdGhpcy5nZXRGaXJzdENydW1iKHBhdGgpO1xuICAgICAgICBsZXQgc2Vjb25kID0gdGhpcy5nZXRTZWNvbmRDcnVtYihwYXRoKTtcbiAgICAgICAgcm91dGVzLnB1c2goZmlyc3QpO1xuICAgICAgICBpZiAoc2Vjb25kKSB7XG4gICAgICAgICAgICByb3V0ZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgcGF0aDogKGZpcnN0LnBhdGggKyBzZWNvbmQucGF0aCkucmVwbGFjZSgvXFwvXFwvL2csICcvJyksXG4gICAgICAgICAgICAgICAgYnJlYWRjcnVtYk5hbWU6IHNlY29uZC5icmVhZGNydW1iTmFtZVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICBsZXQgdGhpcmQgPSB0aGlzLmdldFRoaXJkQ3J1bWIocGF0aCwgc2Vjb25kKTtcbiAgICAgICAgaWYgKHRoaXJkKSB7XG4gICAgICAgICAgICByb3V0ZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgcGF0aDogKGZpcnN0LnBhdGggKyBzZWNvbmQucGF0aCArIHRoaXJkLnBhdGgpLnJlcGxhY2UoL1xcL1xcLy9nLCAnLycpLFxuICAgICAgICAgICAgICAgIGJyZWFkY3J1bWJOYW1lOiB0aGlyZC5icmVhZGNydW1iTmFtZVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICBsZXQgZm91cnRoID0gdGhpcy5nZXRGb3VydGhDcnVtYihwYXRoLCB0aGlyZCk7XG4gICAgICAgIGlmIChmb3VydGgpIHtcbiAgICAgICAgICAgIHJvdXRlcy5wdXNoKHtcbiAgICAgICAgICAgICAgICBwYXRoOiAoZmlyc3QucGF0aCArIHNlY29uZC5wYXRoICsgdGhpcmQucGF0aCArIGZvdXJ0aC5wYXRoKS5yZXBsYWNlKC9cXC9cXC8vZywgJy8nKSxcbiAgICAgICAgICAgICAgICBicmVhZGNydW1iTmFtZTogZm91cnRoLmJyZWFkY3J1bWJOYW1lXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByb3V0ZXM7XG4gICAgfVxuXG4gICAgaXRlbVJlbmRlciA9IChyb3V0ZSwgcGFyYW1zLCByb3V0ZXMsIHBhdGhzKSA9PiB7XG4gICAgICAgIGNvbnN0IGxhc3QgPSByb3V0ZXMuaW5kZXhPZihyb3V0ZSkgPT09IHJvdXRlcy5sZW5ndGggLSAxO1xuICAgICAgICByZXR1cm4gbGFzdCA/IDxzcGFuPntyb3V0ZS5icmVhZGNydW1iTmFtZX08L3NwYW4+IDogPGEgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgIGhpc3RvcnkucHVzaChyb3V0ZS5wYXRoKTtcbiAgICAgICAgICAgIH19Pntyb3V0ZS5icmVhZGNydW1iTmFtZX08L2E+O1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgbGV0IHsgcm91dGVzIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2NydW1icyc+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdjLWdvYmFjaycgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeS5nb0JhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3NOYW1lPSdjZy1pY29uJz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx1c2UgeGxpbmtIcmVmPScjZ29iYWNrJz48L3VzZT5cbiAgICAgICAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDxCcmVhZGNydW1iIHNlcGFyYXRvcj1cIj5cIiBpdGVtUmVuZGVyPXt0aGlzLml0ZW1SZW5kZXJ9IHJvdXRlcz17cm91dGVzfSAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEN1cm1iO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vaW5kZXguc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9pbmRleC5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9pbmRleC5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuY3J1bWJzIHtcXG4gIGhlaWdodDogNS4wN3Z3O1xcbiAgbGluZS1oZWlnaHQ6IDUuMDd2dzsgfVxcbiAgLmNydW1icyAuYy1nb2JhY2sge1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICAgIG1hcmdpbi1yaWdodDogLjgzdnc7XFxuICAgIHdpZHRoOiAyLjc4dnc7XFxuICAgIGhlaWdodDogMi43OHZ3O1xcbiAgICBsaW5lLWhlaWdodDogMi43OHZ3O1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCB3aGl0ZXNtb2tlO1xcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjVzOyB9XFxuICAgIC5jcnVtYnMgLmMtZ29iYWNrIC5jZy1pY29uIHtcXG4gICAgICBmaWxsOiAjRDhEOEQ4O1xcbiAgICAgIHdpZHRoOiAuOXZ3O1xcbiAgICAgIGhlaWdodDogLjl2dztcXG4gICAgICB0cmFuc2l0aW9uOiBhbGwgLjVzOyB9XFxuICAuY3J1bWJzIC5jLWdvYmFjazpob3ZlciB7XFxuICAgIGJvcmRlci1jb2xvcjogIzAwRDRCQzsgfVxcbiAgLmNydW1icyAuYy1nb2JhY2s6aG92ZXIgLmNnLWljb24ge1xcbiAgICBmaWxsOiAjMDBENEJDOyB9XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFRhYmxlIH0gZnJvbSAnYW50ZCc7XG5pbXBvcnQgeyBSZXNpemFibGUgfSBmcm9tICdyZWFjdC1yZXNpemFibGUnO1xuaW1wb3J0ICcuL2luZGV4LnNjc3MnO1xuaW1wb3J0IGhpc3RvcnkgZnJvbSAnLi4vLi4vdXRpbHMvaGlzdG9yeSc7XG5pbXBvcnQgeyBnZXRGb3JtYXRlRGF0ZSwgc2Vjb25kczJ0aW1lIH0gZnJvbSAnLi4vLi4vdXRpbHMvdXRpbCc7XG5cbmNvbnN0IFJlc2l6ZWFibGVUaXRsZSA9IChwcm9wcykgPT4ge1xuICAgIGNvbnN0IHsgb25SZXNpemUsIHdpZHRoLCAuLi5yZXN0UHJvcHMgfSA9IHByb3BzO1xuXG4gICAgaWYgKCF3aWR0aCkge1xuICAgICAgICByZXR1cm4gPHRoIHsuLi5yZXN0UHJvcHN9IC8+O1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICAgIDxSZXNpemFibGUgd2lkdGg9e3dpZHRofSBoZWlnaHQ9ezB9IG9uUmVzaXplPXtvblJlc2l6ZX0+XG4gICAgICAgICAgICA8dGggey4uLnJlc3RQcm9wc30gLz5cbiAgICAgICAgPC9SZXNpemFibGU+XG4gICAgKTtcbn07XG5cbmNsYXNzIEN1c3RvbVRhYmxlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBsaXN0OiBudWxsLFxuICAgICAgICAgICAgcGF0aG5hbWU6ICcnLFxuICAgICAgICAgICAgaGVhZGVyc3RhdGU6IG51bGxcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICB0aGlzLnNldExpc3QodGhpcy5wcm9wcyk7XG4gICAgfVxuXG4gICAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgICAgdGhpcy5zZXRMaXN0KG5leHRQcm9wcyk7XG4gICAgfVxuXG4gICAgc2V0TGlzdChwcm9wcykge1xuICAgICAgICBsZXQgbGlzdCA9IHByb3BzLmxpc3Q7XG4gICAgICAgIGlmICghbGlzdCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCBuZXdMaXN0ID0ge1xuICAgICAgICAgICAgZGF0YTogW10sXG4gICAgICAgICAgICBwYWdlOiBsaXN0LnBhZ2UsXG4gICAgICAgICAgICBwYWdlX251bTogbGlzdC5wYWdlX251bVxuICAgICAgICB9XG4gICAgICAgIG5ld0xpc3QuZGF0YSA9IGxpc3QuZGF0YS5tYXAoZSA9PiB7XG4gICAgICAgICAgICBsZXQgYWNjdXJhY3kgPSBlLnF1ZXN0aW9uX2luZm8ucXVlc3Rpb25fbnVtID09PSAwID8gJzAlJyA6IChlLnF1ZXN0aW9uX2luZm8uY29ycmVjdF9xdWVzdGlvbl9udW0gLyBlLnF1ZXN0aW9uX2luZm8ucXVlc3Rpb25fbnVtICogMTAwKS50b0ZpeGVkKDApICsgJyUnO1xuICAgICAgICAgICAgbGV0IGZpbmlzaF9yYXRlID0gZS50b3RhbF9ob21ld29ya19udW0gPT09IDAgPyAnMCUnIDogKGUuZmluaXNoZWRfbnVtIC8gZS50b3RhbF9ob21ld29ya19udW0gKiAxMDApLnRvRml4ZWQoMCkgKyAnJSc7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGlkOiBlLnN0dWRlbnQuaWQgPyBlLnN0dWRlbnQuaWQgOiBlLnN0dWRlbnQuc3R1ZGVudF9pZCA/IGUuc3R1ZGVudC5zdHVkZW50X2lkIDogJycsXG4gICAgICAgICAgICAgICAgc3R1ZGVudF9uYW1lOiBlLnN0dWRlbnQubmFtZSxcbiAgICAgICAgICAgICAgICBwaG9uZTogZS5xdWVzdGlvbl9pbmZvLnBob25lLFxuICAgICAgICAgICAgICAgIGZpbmlzaF9yYXRlOiBmaW5pc2hfcmF0ZSxcbiAgICAgICAgICAgICAgICBhY2N1cmFjeTogYWNjdXJhY3ksXG4gICAgICAgICAgICAgICAgcXVlc3Rpb25fbnVtOiBlLnF1ZXN0aW9uX2luZm8ucXVlc3Rpb25fbnVtLFxuICAgICAgICAgICAgICAgIGRvX3F1ZXN0aW9uX3RpbWU6IHNlY29uZHMydGltZShlLnF1ZXN0aW9uX2luZm8uZG9fcXVlc3Rpb25fdGltZSksXG4gICAgICAgICAgICAgICAgdGVhY2hfdGltZTogc2Vjb25kczJ0aW1lKGUucXVlc3Rpb25faW5mby50ZWFjaF90aW1lKSxcbiAgICAgICAgICAgICAgICBsYXN0X2xlYXJuZWQ6IGUubGFzdF9sZWFybmVkID8gZ2V0Rm9ybWF0ZURhdGUoZS5sYXN0X2xlYXJuZWQgKiAxMDAwKSA6ICfml6AnLFxuICAgICAgICAgICAgICAgIHNxdWFkX25hbWU6IGUuc3R1ZGVudCA/IGUuc3R1ZGVudC5zcXVhZC5uYW1lIDogJycsXG4gICAgICAgICAgICAgICAga2V5OiBlLnN0dWRlbnQuaWQgPyBlLnN0dWRlbnQuaWQgOiBlLnN0dWRlbnQuc3R1ZGVudF9pZCA/IGUuc3R1ZGVudC5zdHVkZW50X2lkIDogJycsXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG5cbiAgICAgICAgbGV0IGhzRGF0YSA9IHtcbiAgICAgICAgICAgIGNvbHVtbnM6IFt7XG4gICAgICAgICAgICAgICAgdGl0bGU6ICflrabnlJ/lkI3np7AnLFxuICAgICAgICAgICAgICAgIGRhdGFJbmRleDogJ3N0dWRlbnRfbmFtZScsXG4gICAgICAgICAgICAgICAgcmVuZGVyOiB0ZXh0ID0+ICg8c3BhbiBjbGFzc05hbWU9J2ZpcnN0Q2VsbCc+e3RleHR9PC9zcGFuPiksXG4gICAgICAgICAgICAgICAga2V5OiAnc3R1ZGVudF9uYW1lJyxcbiAgICAgICAgICAgICAgICBzb3J0ZXI6IHRydWVcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+aJi+acuuWPtycsXG4gICAgICAgICAgICAgICAgZGF0YUluZGV4OiAncGhvbmUnLFxuICAgICAgICAgICAgICAgIGtleTogJ3Bob25lJyxcbiAgICAgICAgICAgICAgICBzb3J0ZXI6IHRydWVcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+S9nOS4muWujOaIkOeOhycsXG4gICAgICAgICAgICAgICAgZGF0YUluZGV4OiAnZmluaXNoX3JhdGUnLFxuICAgICAgICAgICAgICAgIGtleTogJ2ZpbmlzaF9yYXRlJyxcbiAgICAgICAgICAgICAgICBzb3J0ZXI6IHRydWVcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+ato+ehrueOhycsXG4gICAgICAgICAgICAgICAgZGF0YUluZGV4OiAnYWNjdXJhY3knLFxuICAgICAgICAgICAgICAgIGtleTogJ2FjY3VyYWN5JyxcbiAgICAgICAgICAgICAgICBzb3J0ZXI6IHRydWVcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+WBmumimOaVsCcsXG4gICAgICAgICAgICAgICAgZGF0YUluZGV4OiAncXVlc3Rpb25fbnVtJyxcbiAgICAgICAgICAgICAgICBrZXk6ICdxdWVzdGlvbl9udW0nLFxuICAgICAgICAgICAgICAgIHNvcnRlcjogdHJ1ZVxuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIHRpdGxlOiAn5YGa6aKY5pe26ZW/JyxcbiAgICAgICAgICAgICAgICBkYXRhSW5kZXg6ICdkb19xdWVzdGlvbl90aW1lJyxcbiAgICAgICAgICAgICAgICBrZXk6ICdkb19xdWVzdGlvbl90aW1lJyxcbiAgICAgICAgICAgICAgICBzb3J0ZXI6IHRydWVcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+WtpuS5oOaXtumVvycsXG4gICAgICAgICAgICAgICAgZGF0YUluZGV4OiAndGVhY2hfdGltZScsXG4gICAgICAgICAgICAgICAga2V5OiAndGVhY2hfdGltZScsXG4gICAgICAgICAgICAgICAgc29ydGVyOiB0cnVlXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgdGl0bGU6ICfkuIrmrKHlrabkuaDml7bpl7QnLFxuICAgICAgICAgICAgICAgIGRhdGFJbmRleDogJ2xhc3RfbGVhcm5lZCcsXG4gICAgICAgICAgICAgICAga2V5OiAnbGFzdF9sZWFybmVkJyxcbiAgICAgICAgICAgICAgICBzb3J0ZXI6IHRydWVcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+aTjeS9nCcsXG4gICAgICAgICAgICAgICAga2V5OiAnYWN0aW9uJyxcbiAgICAgICAgICAgICAgICByZW5kZXI6IChyZWNvcmQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxhIGhyZWY9XCJqYXZhc2NyaXB0OjtcIiBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaGlzdG9yeS5wdXNoKGAke3Byb3BzLnBhdGhuYW1lfVN0dWRlbnRTdGF0L3N0dWRlbnRfaWQ9JHtyZWNvcmQuaWR9L2ApO1xuICAgICAgICAgICAgICAgICAgICB9fT7mn6XnnIvor6bmg4U8L2E+XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfV1cbiAgICAgICAgfTtcbiAgICAgICAgaWYgKHByb3BzLmRlbGV0ZVJhbmtDaGFuZ2UpIHtcbiAgICAgICAgICAgIGhzRGF0YS5jb2x1bW5zID0gaHNEYXRhLmNvbHVtbnMuZmlsdGVyKGUgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBlLnRpdGxlICE9PSAn5o6S5ZCN5Y+Y5YyWJ1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJvcHMuZGVsZXRlQ29ycmVjdFJhbmspIHtcbiAgICAgICAgICAgIGhzRGF0YS5jb2x1bW5zID0gaHNEYXRhLmNvbHVtbnMuZmlsdGVyKGUgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBlLnRpdGxlICE9PSAn5q2j56Gu546H5o6S5ZCNJ1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJvcHMuc2hvd1NxdWFkKSB7XG4gICAgICAgICAgICBoc0RhdGEuY29sdW1ucy5zcGxpY2UoMSwgMCwge1xuICAgICAgICAgICAgICAgIHRpdGxlOiAn54+t57qnJyxcbiAgICAgICAgICAgICAgICBkYXRhSW5kZXg6ICdzcXVhZF9uYW1lJyxcbiAgICAgICAgICAgICAgICBrZXk6ICdzcXVhZF9uYW1lJyxcbiAgICAgICAgICAgICAgICBzb3J0ZXI6IHRydWVcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBsaXN0OiBuZXdMaXN0LFxuICAgICAgICAgICAgaGVhZGVyc3RhdGU6IGhzRGF0YVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjb21wb25lbnRzID0ge1xuICAgICAgICBoZWFkZXI6IHtcbiAgICAgICAgICAgIGNlbGw6IFJlc2l6ZWFibGVUaXRsZSxcbiAgICAgICAgfSxcbiAgICB9XG5cbiAgICBoYW5kbGVSZXNpemUgPSBpbmRleCA9PiAoZSwgeyBzaXplIH0pID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSgoeyBjb2x1bW5zIH0pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5leHRDb2x1bW5zID0gWy4uLmNvbHVtbnNdO1xuICAgICAgICAgICAgbmV4dENvbHVtbnNbaW5kZXhdID0ge1xuICAgICAgICAgICAgICAgIC4uLm5leHRDb2x1bW5zW2luZGV4XSxcbiAgICAgICAgICAgICAgICB3aWR0aDogc2l6ZS53aWR0aCxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4geyBjb2x1bW5zOiBuZXh0Q29sdW1ucyB9O1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgeyBsaXN0LCBoZWFkZXJzdGF0ZSB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgbGV0IHsgb25DaGFuZ2UgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IGNvbHVtbnMgPSBoZWFkZXJzdGF0ZSAmJiBoZWFkZXJzdGF0ZS5jb2x1bW5zLm1hcCgoY29sLCBpbmRleCkgPT4gKHtcbiAgICAgICAgICAgIC4uLmNvbCxcbiAgICAgICAgICAgIGFsaWduOiAnY2VudGVyJyxcbiAgICAgICAgICAgIG9uSGVhZGVyQ2VsbDogY29sdW1uID0+ICh7XG4gICAgICAgICAgICAgICAgd2lkdGg6IGNvbHVtbi53aWR0aCxcbiAgICAgICAgICAgICAgICBvblJlc2l6ZTogdGhpcy5oYW5kbGVSZXNpemUoaW5kZXgpLFxuICAgICAgICAgICAgfSksXG4gICAgICAgIH0pKTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFRhYmxlXG4gICAgICAgICAgICAgICAgYm9yZGVyZWRcbiAgICAgICAgICAgICAgICBjb21wb25lbnRzPXt0aGlzLmNvbXBvbmVudHN9XG4gICAgICAgICAgICAgICAgY29sdW1ucz17Y29sdW1uc31cbiAgICAgICAgICAgICAgICBkYXRhU291cmNlPXtsaXN0ICYmIGxpc3QuZGF0YX1cbiAgICAgICAgICAgICAgICBwYWdpbmF0aW9uPXt7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAnYm90dG9tJyxcbiAgICAgICAgICAgICAgICAgICAgc2l6ZTogJ3NtYWxsJyxcbiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdEN1cnJlbnQ6IGxpc3QgJiYgbGlzdC5wYWdlLFxuICAgICAgICAgICAgICAgICAgICBwYWdlU2l6ZTogMTUsXG4gICAgICAgICAgICAgICAgICAgIHRvdGFsOiBsaXN0ICYmIDE1ICogbGlzdC5wYWdlX251bVxuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEN1c3RvbVRhYmxlO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFRhYmxlIH0gZnJvbSAnYW50ZCc7XG5pbXBvcnQgeyBSZXNpemFibGUgfSBmcm9tICdyZWFjdC1yZXNpemFibGUnO1xuaW1wb3J0ICcuL2luZGV4LnNjc3MnO1xuaW1wb3J0IGhpc3RvcnkgZnJvbSAnLi4vLi4vdXRpbHMvaGlzdG9yeSc7XG5pbXBvcnQgeyBnZXRGb3JtYXRlRGF0ZSwgc2Vjb25kczJ0aW1lIH0gZnJvbSAnLi4vLi4vdXRpbHMvdXRpbCc7XG5pbXBvcnQgeyBKU29uVG9DU1YgfSBmcm9tICcuLi8uLi91dGlscy9Kc29uVG9DU1YnO1xuXG5jb25zdCBSZXNpemVhYmxlVGl0bGUgPSAocHJvcHMpID0+IHtcbiAgICBjb25zdCB7IG9uUmVzaXplLCB3aWR0aCwgLi4ucmVzdFByb3BzIH0gPSBwcm9wcztcblxuICAgIGlmICghd2lkdGgpIHtcbiAgICAgICAgcmV0dXJuIDx0aCB7Li4ucmVzdFByb3BzfSAvPjtcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8UmVzaXphYmxlIHdpZHRoPXt3aWR0aH0gaGVpZ2h0PXswfSBvblJlc2l6ZT17b25SZXNpemV9PlxuICAgICAgICAgICAgPHRoIHsuLi5yZXN0UHJvcHN9IC8+XG4gICAgICAgIDwvUmVzaXphYmxlPlxuICAgICk7XG59O1xuXG5jbGFzcyBDdXN0b21UYWJsZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgbGlzdDogW10sXG4gICAgICAgICAgICBwYXRobmFtZTogJycsXG4gICAgICAgICAgICBoZWFkZXJzdGF0ZTogbnVsbFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICAgIHRoaXMuc2V0TGlzdCh0aGlzLnByb3BzKTtcbiAgICB9XG5cbiAgICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgICB0aGlzLnNldExpc3QobmV4dFByb3BzKTtcbiAgICB9XG5cbiAgICBzZXRMaXN0KHByb3BzKSB7XG4gICAgICAgIGxldCBsaXN0ID0gcHJvcHMubGlzdDtcbiAgICAgICAgaWYgKCFsaXN0KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAocHJvcHMuZXhwb3J0U3R1ZGVudExpc3QpIHtcbiAgICAgICAgICAgIHByb3BzLmV4cG9ydFN0dWRlbnRMaXN0KHNlbGYpO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IG5ld0xpc3QgPSB7XG4gICAgICAgICAgICBkYXRhOiBbXSxcbiAgICAgICAgICAgIHBhZ2U6IGxpc3QucGFnZSxcbiAgICAgICAgICAgIHBhZ2VfbnVtOiBsaXN0LnBhZ2VfbnVtXG4gICAgICAgIH1cbiAgICAgICAgbmV3TGlzdC5kYXRhID0gbGlzdC5kYXRhLm1hcChlID0+IHtcbiAgICAgICAgICAgIGxldCBhY2N1cmFjeSA9IGUucXVlc3Rpb25fbnVtID09PSAwID8gJzAlJyA6IChlLmNvcnJlY3RfcXVlc3Rpb25fbnVtIC8gZS5xdWVzdGlvbl9udW0gKiAxMDApLnRvRml4ZWQoMCkgKyAnJSc7XG4gICAgICAgICAgICBsZXQgZmluaXNoX3JhdGUgPSAwO1xuICAgICAgICAgICAgaWYgKGUudG90YWxfaG9tZXdvcmtfbnVtKSB7XG4gICAgICAgICAgICAgICAgZmluaXNoX3JhdGUgPSBlLnRvdGFsX2hvbWV3b3JrX251bSA9PT0gMCA/ICcwJScgOiAoZS5maW5pc2hlZF9udW0gLyBlLnRvdGFsX2hvbWV3b3JrX251bSAqIDEwMCkudG9GaXhlZCgwKSArICclJztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZmluaXNoX3JhdGUgPSBlLnF1ZXN0aW9uX251bSA9PT0gMCA/ICcwJScgOiAoZS5maW5pc2hlZF9udW0gLyBlLnF1ZXN0aW9uX251bSAqIDEwMCkudG9GaXhlZCgwKSArICclJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgaWQ6IGUuc3R1ZGVudC5pZCA/IGUuc3R1ZGVudC5pZCA6IGUuc3R1ZGVudC5zdHVkZW50X2lkID8gZS5zdHVkZW50LnN0dWRlbnRfaWQgOiAnJyxcbiAgICAgICAgICAgICAgICBuYW1lOiBlLnN0dWRlbnQubmFtZSxcbiAgICAgICAgICAgICAgICBwaG9uZTogZS5waG9uZSxcbiAgICAgICAgICAgICAgICBmaW5pc2hfcmF0ZTogZmluaXNoX3JhdGUsXG4gICAgICAgICAgICAgICAgYWNjdXJhY3k6IGFjY3VyYWN5LFxuICAgICAgICAgICAgICAgIHF1ZXN0aW9uX251bTogZS5xdWVzdGlvbl9udW0sXG4gICAgICAgICAgICAgICAgY29ycmVjdF9wcm9iX2luZGV4OiBlLmNvcnJlY3RfcHJvYl9pbmRleCxcbiAgICAgICAgICAgICAgICByYWlzZV92YWx1ZTogZS5yYWlzZV92YWx1ZSxcbiAgICAgICAgICAgICAgICBkb19xdWVzdGlvbl90aW1lOiBzZWNvbmRzMnRpbWUoZS5kb19xdWVzdGlvbl90aW1lKSxcbiAgICAgICAgICAgICAgICB0ZWFjaF90aW1lOiBzZWNvbmRzMnRpbWUoZS50ZWFjaF90aW1lKSxcbiAgICAgICAgICAgICAgICBsYXN0X2xlYXJuZWQ6IGUubGFzdF9sZWFybmVkID8gZ2V0Rm9ybWF0ZURhdGUoZS5sYXN0X2xlYXJuZWQgKiAxMDAwKSA6ICfml6AnLFxuICAgICAgICAgICAgICAgIHNxdWFkX25hbWU6IGUuc3R1ZGVudCA/IGUuc3R1ZGVudC5zcXVhZC5uYW1lIDogJycsXG4gICAgICAgICAgICAgICAga2V5OiBlLnN0dWRlbnQuaWQgPyBlLnN0dWRlbnQuaWQgOiBlLnN0dWRlbnQuc3R1ZGVudF9pZCA/IGUuc3R1ZGVudC5zdHVkZW50X2lkIDogJydcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcblxuICAgICAgICBsZXQgaHNEYXRhID0ge1xuICAgICAgICAgICAgY29sdW1uczogW3tcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+WtpueUn+WQjeensCcsXG4gICAgICAgICAgICAgICAgZGF0YUluZGV4OiAnbmFtZScsXG4gICAgICAgICAgICAgICAgcmVuZGVyOiB0ZXh0ID0+ICg8c3BhbiBjbGFzc05hbWU9J2ZpcnN0Q2VsbCc+e3RleHR9PC9zcGFuPiksXG4gICAgICAgICAgICAgICAga2V5OiAnbmFtZScsXG4gICAgICAgICAgICAgICAgc29ydGVyOiB0cnVlXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgdGl0bGU6ICfmiYvmnLrlj7cnLFxuICAgICAgICAgICAgICAgIGRhdGFJbmRleDogJ3Bob25lJyxcbiAgICAgICAgICAgICAgICBrZXk6ICdwaG9uZScsXG4gICAgICAgICAgICAgICAgc29ydGVyOiB0cnVlXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgdGl0bGU6ICfkvZzkuJrlrozmiJDnjocnLFxuICAgICAgICAgICAgICAgIGRhdGFJbmRleDogJ2ZpbmlzaF9yYXRlJyxcbiAgICAgICAgICAgICAgICBrZXk6ICdmaW5pc2hfcmF0ZScsXG4gICAgICAgICAgICAgICAgc29ydGVyOiB0cnVlXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgdGl0bGU6ICfmraPnoa7njocnLFxuICAgICAgICAgICAgICAgIGRhdGFJbmRleDogJ2FjY3VyYWN5JyxcbiAgICAgICAgICAgICAgICBrZXk6ICdhY2N1cmFjeScsXG4gICAgICAgICAgICAgICAgc29ydGVyOiB0cnVlXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgdGl0bGU6ICflgZrpopjmlbAnLFxuICAgICAgICAgICAgICAgIGRhdGFJbmRleDogJ3F1ZXN0aW9uX251bScsXG4gICAgICAgICAgICAgICAga2V5OiAncXVlc3Rpb25fbnVtJyxcbiAgICAgICAgICAgICAgICBzb3J0ZXI6IHRydWVcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+ato+ehrueOh+aOkuWQjScsXG4gICAgICAgICAgICAgICAgZGF0YUluZGV4OiAnY29ycmVjdF9wcm9iX2luZGV4JyxcbiAgICAgICAgICAgICAgICBrZXk6ICdjb3JyZWN0X3Byb2JfaW5kZXgnLFxuICAgICAgICAgICAgICAgIHNvcnRlcjogdHJ1ZVxuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIHRpdGxlOiAn5o6S5ZCN5Y+Y5YyWJyxcbiAgICAgICAgICAgICAgICBkYXRhSW5kZXg6ICdyYWlzZV92YWx1ZScsXG4gICAgICAgICAgICAgICAgcmVuZGVyOiAodGV4dCkgPT4gKFxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e3RleHQgPT0gMCA/ICd0YWJsZUdyYXknIDogcGFyc2VJbnQodGV4dCkgPiAwID8gJ3RhYmxlR3JlZW4nIDogJ3RhYmxlUmVkJ30+e3RleHR9PC9zcGFuPlxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAga2V5OiAncmFpc2VfdmFsdWUnLFxuICAgICAgICAgICAgICAgIHNvcnRlcjogdHJ1ZVxuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIHRpdGxlOiAn5YGa6aKY5pe26ZW/JyxcbiAgICAgICAgICAgICAgICBkYXRhSW5kZXg6ICdkb19xdWVzdGlvbl90aW1lJyxcbiAgICAgICAgICAgICAgICBrZXk6ICdkYXRhSW5kZXgnLFxuICAgICAgICAgICAgICAgIHNvcnRlcjogdHJ1ZVxuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIHRpdGxlOiAn5a2m5Lmg5pe26ZW/JyxcbiAgICAgICAgICAgICAgICBkYXRhSW5kZXg6ICd0ZWFjaF90aW1lJyxcbiAgICAgICAgICAgICAgICBrZXk6ICd0ZWFjaF90aW1lJyxcbiAgICAgICAgICAgICAgICBzb3J0ZXI6IHRydWVcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+S4iuasoeWtpuS5oOaXtumXtCcsXG4gICAgICAgICAgICAgICAgZGF0YUluZGV4OiAnbGFzdF9sZWFybmVkJyxcbiAgICAgICAgICAgICAgICBrZXk6ICdsYXN0X2xlYXJuZWQnLFxuICAgICAgICAgICAgICAgIHNvcnRlcjogdHJ1ZVxuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIHRpdGxlOiAn5pON5L2cJyxcbiAgICAgICAgICAgICAgICBrZXk6ICdhY3Rpb24nLFxuICAgICAgICAgICAgICAgIHJlbmRlcjogKHJlY29yZCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gPGEgaHJlZj1cImphdmFzY3JpcHQ6O1wiIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaGlzdG9yeS5wdXNoKGAke3Byb3BzLnBhdGhuYW1lfVN0dWRlbnRTdGF0L3N0dWRlbnRfaWQ9JHtyZWNvcmQuaWR9L2ApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfX0+5p+l55yL6K+m5oOFPC9hPlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1dXG4gICAgICAgIH07XG4gICAgICAgIGlmIChwcm9wcy5kZWxldGVSYW5rQ2hhbmdlKSB7XG4gICAgICAgICAgICBoc0RhdGEuY29sdW1ucyA9IGhzRGF0YS5jb2x1bW5zLmZpbHRlcihlID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZS50aXRsZSAhPT0gJ+aOkuWQjeWPmOWMlidcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByb3BzLmRlbGV0ZUNvcnJlY3RSYW5rKSB7XG4gICAgICAgICAgICBoc0RhdGEuY29sdW1ucyA9IGhzRGF0YS5jb2x1bW5zLmZpbHRlcihlID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZS50aXRsZSAhPT0gJ+ato+ehrueOh+aOkuWQjSdcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByb3BzLnNob3dTcXVhZCkge1xuICAgICAgICAgICAgaHNEYXRhLmNvbHVtbnMuc3BsaWNlKDEsIDAsIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+ePree6pycsXG4gICAgICAgICAgICAgICAgZGF0YUluZGV4OiAnc3F1YWRfbmFtZScsXG4gICAgICAgICAgICAgICAga2V5OiAnc3F1YWRfbmFtZScsXG4gICAgICAgICAgICAgICAgc29ydGVyOiB0cnVlXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgbGlzdDogbmV3TGlzdCxcbiAgICAgICAgICAgIGhlYWRlcnN0YXRlOiBoc0RhdGFcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29tcG9uZW50cyA9IHtcbiAgICAgICAgaGVhZGVyOiB7XG4gICAgICAgICAgICBjZWxsOiBSZXNpemVhYmxlVGl0bGUsXG4gICAgICAgIH0sXG4gICAgfVxuXG4gICAgaGFuZGxlUmVzaXplID0gaW5kZXggPT4gKGUsIHsgc2l6ZSB9KSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoKHsgY29sdW1ucyB9KSA9PiB7XG4gICAgICAgIGNvbnN0IG5leHRDb2x1bW5zID0gWy4uLmNvbHVtbnNdO1xuICAgICAgICBuZXh0Q29sdW1uc1tpbmRleF0gPSB7XG4gICAgICAgICAgICAuLi5uZXh0Q29sdW1uc1tpbmRleF0sXG4gICAgICAgICAgICB3aWR0aDogc2l6ZS53aWR0aCxcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHsgY29sdW1uczogbmV4dENvbHVtbnMgfTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIGV4cG9ydExpc3QoKSB7XG4gICAgICAgIGxldCB7IGxpc3QgfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGxldCB0YWJsZV9pbmZvID0ge1xuICAgICAgICAgICAgZGF0YTogbGlzdC5kYXRhLFxuICAgICAgICAgICAgZmlsZU5hbWU6ICflrabnlJ/liJfooagnLFxuICAgICAgICAgICAgY29sdW1uczoge1xuICAgICAgICAgICAgICAgIHRpdGxlOiBbJ+WtpueUn+WQjeensCcsICfkvZzkuJrlrozmiJDnjocnLCAn5q2j56Gu546HJywgJ+WBmumimOaVsCcsICfmraPnoa7njofmjpLlkI0nLCAn5o6S5ZCN5Y+Y5YyWJywgJ+WBmumimOaXtumVvycsICflrabkuaDml7bplb8nLCAn5LiK5qyh5a2m5Lmg5pe26Ze0J10sXG4gICAgICAgICAgICAgICAga2V5OiBbJ25hbWUnLCAnZmluaXNoX3JhdGUnLCAnYWNjdXJhY3knLCAncXVlc3Rpb25fbnVtJywgJ2NvcnJlY3RfcHJvYl9pbmRleCcsICdyYWlzZV92YWx1ZScsICdkb19xdWVzdGlvbl90aW1lJywgJ3RlYWNoX3RpbWUnLCAnbGFzdF9sZWFybmVkJ11cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBKU29uVG9DU1Yuc2V0RGF0YUNvbnZlcih0YWJsZV9pbmZvKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCB7IGxpc3QsIGhlYWRlcnN0YXRlIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBsZXQgeyBvbkNoYW5nZSB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgY29sdW1ucyA9IGhlYWRlcnN0YXRlICYmIGhlYWRlcnN0YXRlLmNvbHVtbnMubWFwKChjb2wsIGluZGV4KSA9PiAoe1xuICAgICAgICAgICAgLi4uY29sLFxuICAgICAgICAgICAgYWxpZ246ICdjZW50ZXInLFxuICAgICAgICAgICAgb25IZWFkZXJDZWxsOiBjb2x1bW4gPT4gKHtcbiAgICAgICAgICAgICAgICB3aWR0aDogY29sdW1uLndpZHRoLFxuICAgICAgICAgICAgICAgIG9uUmVzaXplOiB0aGlzLmhhbmRsZVJlc2l6ZShpbmRleCksXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgfSkpO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFRhYmxlXG4gICAgICAgICAgICAgICAgYm9yZGVyZWRcbiAgICAgICAgICAgICAgICBjb21wb25lbnRzPXt0aGlzLmNvbXBvbmVudHN9XG4gICAgICAgICAgICAgICAgY29sdW1ucz17Y29sdW1uc31cbiAgICAgICAgICAgICAgICBkYXRhU291cmNlPXtsaXN0LmRhdGF9XG4gICAgICAgICAgICAgICAgcGFnaW5hdGlvbj17e1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbScsXG4gICAgICAgICAgICAgICAgICAgIHNpemU6ICdzbWFsbCcsXG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHRDdXJyZW50OiBsaXN0LnBhZ2UsXG4gICAgICAgICAgICAgICAgICAgIHBhZ2VTaXplOiAxNSxcbiAgICAgICAgICAgICAgICAgICAgdG90YWw6IDE1ICogbGlzdC5wYWdlX251bVxuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEN1c3RvbVRhYmxlO1xuIiwiZXhwb3J0IGNvbnN0IEpTb25Ub0NTViA9IHtcclxuICAgIC8qXHJcbiAgICAgKiBvYmrmmK/kuIDkuKrlr7nosaHvvIzlhbbkuK3ljIXlkKvmnInvvJpcclxuICAgICAqICMjIGRhdGEg5piv5a+85Ye655qE5YW35L2T5pWw5o2uXHJcbiAgICAgKiAjIyBmaWxlTmFtZSDmmK/lr7zlh7rml7bkv53lrZjnmoTmlofku7blkI3np7Ag5pivc3RyaW5n5qC85byPXHJcbiAgICAgKiAjIyBzaG93TGFiZWwg6KGo56S65piv5ZCm5pi+56S66KGo5aS0IOm7mOiupOaYvuekuiDmmK/luIPlsJTmoLzlvI9cclxuICAgICAqICMjIGNvbHVtbnMg5piv6KGo5aS05a+56LGh77yM5LiUdGl0bGXlkoxrZXnlv4XpobvkuIDkuIDlr7nlupTvvIzljIXlkKvmnIlcclxuICAgICAgICAgIHRpdGxlOltdLCAvLyDooajlpLTlsZXnpLrnmoTmloflrZdcclxuICAgICAgICAgIGtleTpbXSwgLy8g6I635Y+W5pWw5o2u55qES2V5XHJcbiAgICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uKCkgLy8g6Ieq5a6a5LmJ6K6+572u5b2T5YmN5pWw5o2u55qEIOS8oOWFpShrZXksIHZhbHVlKVxyXG4gICAgKiAjIyDkvb/nlKjnpLrkvotcclxuICAgICAgcmVxdWVzdC5kaWZmU3RhdCgpXHJcbiAgICAgICAgICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICB2YXIgdGFibGVfZGF0YSA9IHRoaXMuY29tcGlsZVN1YnNlY3Rpb25EYXRhKHJlc3VsdCk7XHJcbiAgICAgICAgICAgICAgICAgIHZhciB0YWJsZV9pbmZvID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgZGF0YTogdGFibGVfZGF0YSxcclxuICAgICAgICAgICAgICAgICAgICAgIGZpbGVOYW1lOiAn5bCP6IqC6aKY55uu5pWw55uu57uf6K6hJyxcclxuICAgICAgICAgICAgICAgICAgICAgIGNvbHVtbnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogWyfkuablkI0nLCAn56ugJywgJ+iKgicsICflsI/oioInLCAn5oC76aKY5pWwJywgJ+acquagh+azqCcsICfnroDljZXpopgnLCAn5Lit562J6aKYJywgJ+mavumimCddLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGtleTogWydib29rJywgJ2NoYXB0ZXInLCAnc2VjdGlvbicsICdzdWJzZWN0aW9uJywgJ3RvdGFsX251bScsICdub25lJywgJ3NpbXBsZScsICdtaWRkbGUnLCAnZGlmZmljdWx0eSddXHJcbiAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgSlNvblRvQ1NWLnNldERhdGFDb252ZXIodGFibGVfaW5mbyk7XHJcbiAgICAgICAgICAgICAgfSlcclxuICAgICAqL1xyXG4gICAgc2V0RGF0YUNvbnZlcjogZnVuY3Rpb24gKG9iaikge1xyXG4gICAgICAgIHZhciBkYXRhID0gb2JqWydkYXRhJ10sXHJcbiAgICAgICAgICAgIFNob3dMYWJlbCA9IHR5cGVvZiBvYmpbJ3Nob3dMYWJlbCddID09PSAndW5kZWZpbmVkJyA/IHRydWUgOiBvYmpbJ3Nob3dMYWJlbCddLFxyXG4gICAgICAgICAgICBmaWxlTmFtZSA9IChvYmpbJ2ZpbGVOYW1lJ10gfHwgJ1VzZXJFeHBvcnQnKSArICcuY3N2JyxcclxuICAgICAgICAgICAgY29sdW1ucyA9IG9ialsnY29sdW1ucyddIHx8IHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiBbXSxcclxuICAgICAgICAgICAgICAgIGtleTogW10sXHJcbiAgICAgICAgICAgICAgICBmb3JtYXR0ZXI6IHVuZGVmaW5lZFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIHZhciBTaG93TGFiZWwgPSB0eXBlb2YgU2hvd0xhYmVsID09PSAndW5kZWZpbmVkJyA/IHRydWUgOiBTaG93TGFiZWw7XHJcbiAgICAgICAgdmFyIHJvdyA9IFwiXCIsIENTViA9ICcnLCBrZXk7XHJcbiAgICAgICAgLy8g5aaC5p6c6KaB546w5a6e6KGo5aS05paH5a2XXHJcbiAgICAgICAgaWYgKFNob3dMYWJlbCkge1xyXG4gICAgICAgICAgICAvLyDlpoLmnpzmnInkvKDlhaXoh6rlrprkuYnnmoTooajlpLTmloflrZdcclxuICAgICAgICAgICAgaWYgKGNvbHVtbnMudGl0bGUubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICBjb2x1bW5zLnRpdGxlLm1hcChmdW5jdGlvbiAobikge1xyXG4gICAgICAgICAgICAgICAgICAgIHJvdyArPSBuICsgJywnO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAvLyDlpoLmnpzmsqHmnInvvIzlsLHnm7TmjqXlj5bmlbDmja7nrKzkuIDmnaHnmoTlr7nosaHnmoTlsZ7mgKdcclxuICAgICAgICAgICAgICAgIGZvciAoa2V5IGluIGRhdGFbMF0pIHJvdyArPSBrZXkgKyAnLCc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcm93ID0gcm93LnNsaWNlKDAsIC0xKTsgLy8g5Yig6Zmk5pyA5ZCO5LiA5LiqLOWPt++8jOWNs2EsYiwgPT4gYSxiXHJcbiAgICAgICAgICAgIENTViArPSByb3cgKyAnXFxyXFxuJzsgLy8g5re75Yqg5o2i6KGM56ym5Y+3XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIOWFt+S9k+eahOaVsOaNruWkhOeQhlxyXG4gICAgICAgIGRhdGEubWFwKGZ1bmN0aW9uIChuKSB7XHJcbiAgICAgICAgICAgIHJvdyA9ICcnO1xyXG4gICAgICAgICAgICAvLyDlpoLmnpzlrZjlnKjoh6rlrprkuYlrZXnlgLxcclxuICAgICAgICAgICAgaWYgKGNvbHVtbnMua2V5Lmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgY29sdW1ucy5rZXkubWFwKGZ1bmN0aW9uIChtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcm93ICs9ICdcIicgKyAodHlwZW9mIGNvbHVtbnMuZm9ybWF0dGVyID09PSAnZnVuY3Rpb24nID8gY29sdW1ucy5mb3JtYXR0ZXIobSwgblttXSkgfHwgblttXSA6IG5bbV0pICsgJ1wiLCc7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGZvciAoa2V5IGluIG4pIHtcclxuICAgICAgICAgICAgICAgICAgICByb3cgKz0gJ1wiJyArICh0eXBlb2YgY29sdW1ucy5mb3JtYXR0ZXIgPT09ICdmdW5jdGlvbicgPyBjb2x1bW5zLmZvcm1hdHRlcihrZXksIG5ba2V5XSkgfHwgbltrZXldIDogbltrZXldKSArICdcIiwnO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJvdy5zbGljZSgwLCByb3cubGVuZ3RoIC0gMSk7IC8vIOWIoOmZpOacgOWQjuS4gOS4qixcclxuICAgICAgICAgICAgQ1NWICs9IHJvdyArICdcXHJcXG4nOyAvLyDmt7vliqDmjaLooYznrKblj7dcclxuICAgICAgICB9KTtcclxuICAgICAgICBpZiAoIUNTVikgcmV0dXJuO1xyXG4gICAgICAgIHRoaXMuU2F2ZUFzKGZpbGVOYW1lLCBDU1YpO1xyXG4gICAgfSxcclxuICAgIFNhdmVBczogZnVuY3Rpb24gKGZpbGVOYW1lLCBjc3ZEYXRhKSB7XHJcbiAgICAgICAgdmFyIGJ3ID0gdGhpcy5icm93c2VyKCk7XHJcbiAgICAgICAgaWYgKCFid1snZWRnZSddIHx8ICFid1snaWUnXSkge1xyXG4gICAgICAgICAgICB2YXIgYWxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcclxuICAgICAgICAgICAgYWxpbmsuaWQgPSBcImxpbmtEd25sZExpbmtcIjtcclxuICAgICAgICAgICAgYWxpbmsuaHJlZiA9IHRoaXMuZ2V0RG93bmxvYWRVcmwoY3N2RGF0YSk7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYWxpbmspO1xyXG4gICAgICAgICAgICB2YXIgbGlua0RvbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsaW5rRHdubGRMaW5rJyk7XHJcbiAgICAgICAgICAgIGxpbmtEb20uc2V0QXR0cmlidXRlKCdkb3dubG9hZCcsIGZpbGVOYW1lKTtcclxuICAgICAgICAgICAgbGlua0RvbS5jbGljaygpO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGxpbmtEb20pO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBnZXREb3dubG9hZFVybDogZnVuY3Rpb24gKGNzdkRhdGEpIHtcclxuICAgICAgICB2YXIgX3V0ZiA9IFwiXFx1RkVGRlwiOyAvLyDkuLrkuobkvb9FeGNlbOS7pXV0Zi0455qE57yW56CB5qih5byP77yM5ZCM5pe25Lmf5piv6Kej5Yaz5Lit5paH5Lmx56CB55qE6Zeu6aKYXHJcbiAgICAgICAgaWYgKHdpbmRvdy5CbG9iICYmIHdpbmRvdy5VUkwgJiYgd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwpIHtcclxuICAgICAgICAgICAgdmFyIGNzdkRhdGEgPSBuZXcgQmxvYihbX3V0ZiArIGNzdkRhdGFdLCB7XHJcbiAgICAgICAgICAgICAgICB0eXBlOiAndGV4dC9jc3YnXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICByZXR1cm4gVVJMLmNyZWF0ZU9iamVjdFVSTChjc3ZEYXRhKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gcmV0dXJuICdkYXRhOmF0dGFjaG1lbnQvY3N2O2NoYXJzZXQ9dXRmLTgsJyArIF91dGYgKyBlbmNvZGVVUklDb21wb25lbnQoY3N2RGF0YSk7XHJcbiAgICB9LFxyXG4gICAgYnJvd3NlcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBTeXMgPSB7fTtcclxuICAgICAgICB2YXIgdWEgPSBuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCk7XHJcbiAgICAgICAgdmFyIHM7XHJcbiAgICAgICAgKHMgPSB1YS5pbmRleE9mKCdlZGdlJykgIT09IC0gMSA/IFN5cy5lZGdlID0gJ2VkZ2UnIDogdWEubWF0Y2goL3J2OihbXFxkLl0rKVxcKSBsaWtlIGdlY2tvLykpID8gU3lzLmllID0gc1sxXSA6XHJcbiAgICAgICAgICAgIChzID0gdWEubWF0Y2goL21zaWUgKFtcXGQuXSspLykpID8gU3lzLmllID0gc1sxXSA6XHJcbiAgICAgICAgICAgICAgICAocyA9IHVhLm1hdGNoKC9maXJlZm94XFwvKFtcXGQuXSspLykpID8gU3lzLmZpcmVmb3ggPSBzWzFdIDpcclxuICAgICAgICAgICAgICAgICAgICAocyA9IHVhLm1hdGNoKC9jaHJvbWVcXC8oW1xcZC5dKykvKSkgPyBTeXMuY2hyb21lID0gc1sxXSA6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIChzID0gdWEubWF0Y2goL29wZXJhLihbXFxkLl0rKS8pKSA/IFN5cy5vcGVyYSA9IHNbMV0gOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKHMgPSB1YS5tYXRjaCgvdmVyc2lvblxcLyhbXFxkLl0rKS4qc2FmYXJpLykpID8gU3lzLnNhZmFyaSA9IHNbMV0gOiAwO1xyXG4gICAgICAgIHJldHVybiBTeXM7XHJcbiAgICB9XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgZGVlcENvcHlPYmplY3QgPSAoc291cmNlKSA9PiB7XHJcbiAgICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShzb3VyY2UpKTtcclxufSIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4vaW5kZXguc2Nzcyc7XG5cbmNvbnN0IGNvbG9ycyA9IFtcbiAgICB7XG4gICAgICAgIGNvbG9yOiAnIzJBQkRCMicsXG4gICAgICAgIGJhY2tncm91bmQ6ICcjRDlGOUY2J1xuICAgIH0sXG4gICAge1xuICAgICAgICBjb2xvcjogJyMzMjVGRDknLFxuICAgICAgICBiYWNrZ3JvdW5kOiAnI0UwRTdGQSdcbiAgICB9LFxuICAgIHtcbiAgICAgICAgY29sb3I6ICcjREY4RjE0JyxcbiAgICAgICAgYmFja2dyb3VuZDogJyNGRUVBQ0MnXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGNvbG9yOiAnI0UzNUM4NycsXG4gICAgICAgIGJhY2tncm91bmQ6ICcjRkZEQ0U2J1xuICAgIH1cbl07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFdlYWtUb3BpY3MocHJvcHMpIHtcbiAgICBsZXQgeyBkYXRhIH0gPSBwcm9wcztcbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nd2Vhay10b3BpY3MnPlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGRhdGEubWFwKChkLCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiA8c3BhbiBjbGFzc05hbWU9J3d0LWl0ZW0nIHN0eWxlPXt7Li4uY29sb3JzW2kgJSBjb2xvcnMubGVuZ3RoXX19XG4gICAgICAgICAgICAgICAgICAgICAgICBrZXk9e2l9PntkfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9pbmRleC5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2luZGV4LnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2luZGV4LnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi53ZWFrLXRvcGljcyB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LXdyYXA6IHdyYXA7XFxuICBhbGlnbi1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgb3ZlcmZsb3c6IGF1dG87IH1cXG4gIC53ZWFrLXRvcGljcyAud3QtaXRlbSB7XFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gICAgaGVpZ2h0OiAyLjA4dnc7XFxuICAgIGxpbmUtaGVpZ2h0OiAyLjA4dnc7XFxuICAgIG1hcmdpbi1ib3R0b206IC44M3Z3O1xcbiAgICBtYXJnaW4tcmlnaHQ6IC42OXZ3O1xcbiAgICBwYWRkaW5nOiAwIC42OXZ3O1xcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICAgIGZvbnQtc2l6ZTogLjgzdnc7IH1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9pbmRleC5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2luZGV4LnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2luZGV4LnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5kZXRhaWxzdGF0IHtcXG4gIGJhY2tncm91bmQ6ICNmYWZhZmE7XFxuICBwYWRkaW5nOiAwIDIuMDh2dztcXG4gIHBhZGRpbmctYm90dG9tOiA4LjR2dzsgfVxcbiAgLmRldGFpbHN0YXQgLmRzLXNlbGVjdCB7XFxuICAgIG1hcmdpbi1ib3R0b206IDEuMzl2dzsgfVxcbiAgLmRldGFpbHN0YXQgLmRzLXRvcGluZm8ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IDEyLjc4dnc7XFxuICAgIG1hcmdpbi1ib3R0b206IDEuMzl2dzsgfVxcbiAgICAuZGV0YWlsc3RhdCAuZHMtdG9waW5mbyAuZHN0LWxlZnQge1xcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gICAgICB3aWR0aDogMjclO1xcbiAgICAgIGhlaWdodDogMTAwJTtcXG4gICAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxcbiAgICAgIC5kZXRhaWxzdGF0IC5kcy10b3BpbmZvIC5kc3QtbGVmdCAuZHN0bC1jaGFydCB7XFxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICAgICAgICB3aWR0aDogNTAlO1xcbiAgICAgICAgaGVpZ2h0OiAxMDAlOyB9XFxuICAgIC5kZXRhaWxzdGF0IC5kcy10b3BpbmZvIC5kc3QtbWlkZGxlIHtcXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICAgICAgd2lkdGg6IDM4JTtcXG4gICAgICBoZWlnaHQ6IDEwMCU7XFxuICAgICAgZGlzcGxheTogZmxleDtcXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cXG4gICAgICAuZGV0YWlsc3RhdCAuZHMtdG9waW5mbyAuZHN0LW1pZGRsZSAuZHN0bS1pbmZvIHtcXG4gICAgICAgIHdpZHRoOiAzMyU7XFxuICAgICAgICBoZWlnaHQ6IDEwMCU7XFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxcbiAgICAgICAgLmRldGFpbHN0YXQgLmRzLXRvcGluZm8gLmRzdC1taWRkbGUgLmRzdG0taW5mbyAuZHN0bWktaWNvbiB7XFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICAgICAgICB3aWR0aDogNC4ydnc7XFxuICAgICAgICAgIGhlaWdodDogNC4ydnc7XFxuICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICNmNWY1ZjU7XFxuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTsgfVxcbiAgICAgICAgICAuZGV0YWlsc3RhdCAuZHMtdG9waW5mbyAuZHN0LW1pZGRsZSAuZHN0bS1pbmZvIC5kc3RtaS1pY29uIC5kc3RtaWktc3ZnIHtcXG4gICAgICAgICAgICB3aWR0aDogMS42dnc7XFxuICAgICAgICAgICAgaGVpZ2h0OiAxLjZ2dzsgfVxcbiAgICAgICAgLmRldGFpbHN0YXQgLmRzLXRvcGluZm8gLmRzdC1taWRkbGUgLmRzdG0taW5mbyAuZHN0bWktbnVtYiB7XFxuICAgICAgICAgIGZvbnQtc2l6ZTogMS44dnc7XFxuICAgICAgICAgIGNvbG9yOiAjNjY2OyB9XFxuICAgICAgICAuZGV0YWlsc3RhdCAuZHMtdG9waW5mbyAuZHN0LW1pZGRsZSAuZHN0bS1pbmZvIC5kc3RtaS1kZXNjIHtcXG4gICAgICAgICAgZm9udC1zaXplOiAuOTd2dztcXG4gICAgICAgICAgY29sb3I6ICM5OTk7IH1cXG4gICAgLmRldGFpbHN0YXQgLmRzLXRvcGluZm8gLmRzdC1yaWdodCB7XFxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgICAgIHdpZHRoOiAzMCU7XFxuICAgICAgaGVpZ2h0OiAxMDAlOyB9XFxuICAgICAgLmRldGFpbHN0YXQgLmRzLXRvcGluZm8gLmRzdC1yaWdodCAuZHN0ci13cm9uZ3BvaW50IHtcXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7IH1cXG4gIC5kZXRhaWxzdGF0IC5kcy1zZWN0aW9ubGVhcm4ge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgbWFyZ2luLWJvdHRvbTogMS4zOXZ3OyB9XFxuICAuZGV0YWlsc3RhdCAuZHMtY2hhcnRoZWFkZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIHBhZGRpbmc6IDAgMS4zOXZ3O1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgaGVpZ2h0OiA0LjAydnc7XFxuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZjVmNWY1OyB9XFxuICAgIC5kZXRhaWxzdGF0IC5kcy1jaGFydGhlYWRlciAuZHNjLXRpdGxlIHtcXG4gICAgICBjb2xvcjogIzY2NjtcXG4gICAgICBmb250LXNpemU6IDEuMTF2dztcXG4gICAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cXG4gICAgLmRldGFpbHN0YXQgLmRzLWNoYXJ0aGVhZGVyIC5kc2MtYnRuIHtcXG4gICAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgICAgd2lkdGg6IDYuOTR2dztcXG4gICAgICBoZWlnaHQ6IDIuNzh2dztcXG4gICAgICBwYWRkaW5nOiAwIDEuMzl2dztcXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgICAgYmFja2dyb3VuZDogIzAwZDRiYztcXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgICAgYm9yZGVyLXJhZGl1czogNXB4OyB9XFxuICAgICAgLmRldGFpbHN0YXQgLmRzLWNoYXJ0aGVhZGVyIC5kc2MtYnRuIC5kc2NiLWljb24ge1xcbiAgICAgICAgd2lkdGg6IDEuMzJ2dztcXG4gICAgICAgIGhlaWdodDogMS4zMnZ3O1xcbiAgICAgICAgZmlsbDogI2ZmZjtcXG4gICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjVzIGN1YmljLWJlemllcigwLjIsIDAuNiwgMC4zLCAxKSwgLXdlYmtpdC10cmFuc2Zvcm0gMC41cyBjdWJpYy1iZXppZXIoMC4yLCAwLjYsIDAuMywgMSk7IH1cXG4gICAgICAuZGV0YWlsc3RhdCAuZHMtY2hhcnRoZWFkZXIgLmRzYy1idG4gLmRzY2ItdGV4dCB7XFxuICAgICAgICBjb2xvcjogI2ZmZjsgfVxcbiAgICAuZGV0YWlsc3RhdCAuZHMtY2hhcnRoZWFkZXIgLmRzYy1idG46aG92ZXIge1xcbiAgICAgIGJhY2tncm91bmQ6ICMyM2UwY2E7IH1cXG4gICAgICAuZGV0YWlsc3RhdCAuZHMtY2hhcnRoZWFkZXIgLmRzYy1idG46aG92ZXIgLmRzY2ItaWNvbiB7XFxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMikgdHJhbnNsYXRlWigwKTtcXG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjIpIHRyYW5zbGF0ZVooMCk7IH1cXG5cXG4uYW50LXNlbGVjdC1kcm9wZG93biB7XFxuICBmb250LXNpemU6IC45N3Z3OyB9XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFRhYmxlIH0gZnJvbSAnYW50ZCc7XG5pbXBvcnQgeyBSZXNpemFibGUgfSBmcm9tICdyZWFjdC1yZXNpemFibGUnO1xuaW1wb3J0ICcuL2luZGV4LnNjc3MnO1xuaW1wb3J0IGhpc3RvcnkgZnJvbSAnLi4vLi4vdXRpbHMvaGlzdG9yeSc7XG5pbXBvcnQgeyBzZWNvbmRzMnRpbWUgfSBmcm9tICcuLi8uLi91dGlscy91dGlsJztcblxuY29uc3QgUmVzaXplYWJsZVRpdGxlID0gKHByb3BzKSA9PiB7XG4gICAgY29uc3QgeyBvblJlc2l6ZSwgd2lkdGgsIC4uLnJlc3RQcm9wcyB9ID0gcHJvcHM7XG5cbiAgICBpZiAoIXdpZHRoKSB7XG4gICAgICAgIHJldHVybiA8dGggey4uLnJlc3RQcm9wc30gLz47XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPFJlc2l6YWJsZSB3aWR0aD17d2lkdGh9IGhlaWdodD17MH0gb25SZXNpemU9e29uUmVzaXplfT5cbiAgICAgICAgICAgIDx0aCB7Li4ucmVzdFByb3BzfSAvPlxuICAgICAgICA8L1Jlc2l6YWJsZT5cbiAgICApO1xufTtcblxuY2xhc3MgQ3VzdG9tVGFibGUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGxpc3Q6IFtdLFxuICAgICAgICAgICAgaGVhZGVyc3RhdGU6IHtcbiAgICAgICAgICAgICAgICBjb2x1bW5zOiBbe1xuICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ+Wwj+iKgicsXG4gICAgICAgICAgICAgICAgICAgIGRhdGFJbmRleDogJ25hbWUnLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXI6IHRleHQgPT4gKDxzcGFuIGNsYXNzTmFtZT0nZmlyc3RDZWxsJz57dGV4dH08L3NwYW4+KSxcbiAgICAgICAgICAgICAgICAgICAga2V5OiAnbmFtZSdcbiAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiAn5a6M5oiQ5a2m55Sf5pWwJyxcbiAgICAgICAgICAgICAgICAgICAgZGF0YUluZGV4OiAnZmluaXNoZWRfbnVtJyxcbiAgICAgICAgICAgICAgICAgICAga2V5OiAnZmluaXNoZWRfbnVtJ1xuICAgICAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICfnj63nuqflubPlnYfmraPnoa7njocnLFxuICAgICAgICAgICAgICAgICAgICBkYXRhSW5kZXg6ICdhdmdfY29ycmVjdCcsXG4gICAgICAgICAgICAgICAgICAgIGtleTogJ2F2Z19jb3JyZWN0J1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgLy8ge1xuICAgICAgICAgICAgICAgIC8vICAgICB0aXRsZTogJ+W5tOe6p+W5s+Wdh+ato+ehrueOhycsXG4gICAgICAgICAgICAgICAgLy8gICAgIGRhdGFJbmRleDogJ3JlZmVyX2FjY3J1YWN5JyxcbiAgICAgICAgICAgICAgICAvLyB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICflubPlnYflgZrpopjmlbAnLFxuICAgICAgICAgICAgICAgICAgICBkYXRhSW5kZXg6ICdxdWVzdGlvbl9udW0nLFxuICAgICAgICAgICAgICAgICAgICBrZXk6ICdxdWVzdGlvbl9udW0nXG4gICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ+W5s+Wdh+WBmumimOaXtumVvycsXG4gICAgICAgICAgICAgICAgICAgIGRhdGFJbmRleDogJ2RvX3F1ZXN0aW9uX3RpbWUnLFxuICAgICAgICAgICAgICAgICAgICBrZXk6ICdkb19xdWVzdGlvbl90aW1lJ1xuICAgICAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICflubPlnYflrabkuaDml7bplb8nLFxuICAgICAgICAgICAgICAgICAgICBkYXRhSW5kZXg6ICd0ZWFjaF90aW1lJyxcbiAgICAgICAgICAgICAgICAgICAga2V5OiAndGVhY2hfdGltZSdcbiAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiAn55O26aKI55+l6K+G54K5JyxcbiAgICAgICAgICAgICAgICAgICAgZGF0YUluZGV4OiAnd2Vha190b3BpY3MnLFxuICAgICAgICAgICAgICAgICAgICBrZXk6ICd3ZWFrX3RvcGljcydcbiAgICAgICAgICAgICAgICB9XVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICAgIHRoaXMuc2V0TGlzdCh0aGlzLnByb3BzKTtcbiAgICB9XG5cbiAgICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgICB0aGlzLnNldExpc3QobmV4dFByb3BzKTtcbiAgICB9XG5cbiAgICBzZXRMaXN0KHByb3BzKSB7XG4gICAgICAgIGxldCB7IGhlYWRlcnN0YXRlIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBsZXQgeyBsaXN0LCB0b3RhbF9ob21ld29ya19udW0gfSA9IHByb3BzO1xuICAgICAgICBpZiAoIWxpc3QpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgbmV3TGlzdCA9IHtcbiAgICAgICAgICAgIGRhdGE6IFtdLFxuICAgICAgICAgICAgcGFnZTogbGlzdC5wYWdlLFxuICAgICAgICAgICAgcGFnZV9udW06IGxpc3QucGFnZV9udW1cbiAgICAgICAgfVxuICAgICAgICBuZXdMaXN0LmRhdGEgPSBsaXN0LmRhdGEubWFwKGUgPT4ge1xuICAgICAgICAgICAgbGV0IGF2Z19jb3JyZWN0ID0gZS5xdWVzdGlvbl9udW0gPT09IDAgPyAnMCUnIDogKGUuY29ycmVjdF9xdWVzdGlvbl9udW0gLyBlLnF1ZXN0aW9uX251bSAqIDEwMCkudG9GaXhlZCgwKSArICclJztcbiAgICAgICAgICAgIGxldCB3ZWFrX3RvcGljcyA9IGUud2Vha190b3BpY3MubGVuZ3RoID4gMCA/IGUud2Vha190b3BpY3MubWFwKHd0ID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gd3QubmFtZVxuICAgICAgICAgICAgfSkuc2xpY2UoMCwgNSkuam9pbign44CBJykgOiAn5pegJztcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgbmFtZTogZS5zdWJzZWN0aW9uID8gZS5zdWJzZWN0aW9uLm5hbWUgOiBlLm5hbWUsXG4gICAgICAgICAgICAgICAgZmluaXNoZWRfbnVtOiBlLmZpbmlzaGVkX251bSxcbiAgICAgICAgICAgICAgICBhdmdfY29ycmVjdDogYXZnX2NvcnJlY3QsXG4gICAgICAgICAgICAgICAgcXVlc3Rpb25fbnVtOiB0b3RhbF9ob21ld29ya19udW0gPyAoZS5xdWVzdGlvbl9udW0gLyB0b3RhbF9ob21ld29ya19udW0pLnRvRml4ZWQoMCkgOiAwLFxuICAgICAgICAgICAgICAgIGRvX3F1ZXN0aW9uX3RpbWU6IHRvdGFsX2hvbWV3b3JrX251bSA/IHNlY29uZHMydGltZSgoZS5kb19xdWVzdGlvbl90aW1lIC8gdG90YWxfaG9tZXdvcmtfbnVtKS50b0ZpeGVkKDApKSA6IDAsXG4gICAgICAgICAgICAgICAgdGVhY2hfdGltZTogdG90YWxfaG9tZXdvcmtfbnVtID8gc2Vjb25kczJ0aW1lKChlLnRlYWNoX3RpbWUgLyB0b3RhbF9ob21ld29ya19udW0pLnRvRml4ZWQoMCkpIDogMCxcbiAgICAgICAgICAgICAgICB3ZWFrX3RvcGljczogd2Vha190b3BpY3MsXG4gICAgICAgICAgICAgICAga2V5OiBlLnN1YnNlY3Rpb24gPyBlLnN1YnNlY3Rpb24ubmFtZSA6IGUubmFtZSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGxldCBoc2RhdGEgPSBoZWFkZXJzdGF0ZTtcbiAgICAgICAgaWYgKHByb3BzLmRlbGV0ZUZpbmlzaCkge1xuICAgICAgICAgICAgaHNkYXRhLmNvbHVtbnMgPSBoZWFkZXJzdGF0ZS5jb2x1bW5zLmZpbHRlcihlID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZS50aXRsZSAhPT0gJ+WujOaIkOWtpueUn+aVsCdcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBsaXN0OiBuZXdMaXN0LFxuICAgICAgICAgICAgaGVhZGVyc3RhdGU6IGhzZGF0YVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGNvbXBvbmVudHMgPSB7XG4gICAgICAgIGhlYWRlcjoge1xuICAgICAgICAgICAgY2VsbDogUmVzaXplYWJsZVRpdGxlLFxuICAgICAgICB9LFxuICAgIH1cblxuICAgIGhhbmRsZVJlc2l6ZSA9IGluZGV4ID0+IChlLCB7IHNpemUgfSkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKCh7IGNvbHVtbnMgfSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgbmV4dENvbHVtbnMgPSBbLi4uY29sdW1uc107XG4gICAgICAgICAgICBuZXh0Q29sdW1uc1tpbmRleF0gPSB7XG4gICAgICAgICAgICAgICAgLi4ubmV4dENvbHVtbnNbaW5kZXhdLFxuICAgICAgICAgICAgICAgIHdpZHRoOiBzaXplLndpZHRoLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiB7IGNvbHVtbnM6IG5leHRDb2x1bW5zIH07XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCB7IGxpc3QsIGhlYWRlcnN0YXRlIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBsZXQgeyBub1BhZ2luYXRpb24sIG9uQ2hhbmdlIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBsZXQgcGFnaW5hdGlvbiA9IHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiAnYm90dG9tJyxcbiAgICAgICAgICAgIHNpemU6ICdzbWFsbCcsXG4gICAgICAgICAgICBkZWZhdWx0Q3VycmVudDogbGlzdC5wYWdlLFxuICAgICAgICAgICAgcGFnZVNpemU6IDE1LFxuICAgICAgICAgICAgdG90YWw6IDE1ICogbGlzdC5wYWdlX251bVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNvbHVtbnMgPSBoZWFkZXJzdGF0ZS5jb2x1bW5zLm1hcCgoY29sLCBpbmRleCkgPT4gKHtcbiAgICAgICAgICAgIC4uLmNvbCxcbiAgICAgICAgICAgIGFsaWduOiAnY2VudGVyJyxcbiAgICAgICAgICAgIG9uSGVhZGVyQ2VsbDogY29sdW1uID0+ICh7XG4gICAgICAgICAgICAgICAgd2lkdGg6IGNvbHVtbi53aWR0aCxcbiAgICAgICAgICAgICAgICBvblJlc2l6ZTogdGhpcy5oYW5kbGVSZXNpemUoaW5kZXgpLFxuICAgICAgICAgICAgfSksXG4gICAgICAgIH0pKTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFRhYmxlXG4gICAgICAgICAgICAgICAgYm9yZGVyZWRcbiAgICAgICAgICAgICAgICBjb21wb25lbnRzPXt0aGlzLmNvbXBvbmVudHN9XG4gICAgICAgICAgICAgICAgY29sdW1ucz17Y29sdW1uc31cbiAgICAgICAgICAgICAgICBkYXRhU291cmNlPXtsaXN0LmRhdGF9XG4gICAgICAgICAgICAgICAgcGFnaW5hdGlvbj17bm9QYWdpbmF0aW9uID8gZmFsc2UgOiBwYWdpbmF0aW9ufVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDdXN0b21UYWJsZTtcbiJdLCJzb3VyY2VSb290IjoiIn0=